{"version":3,"sources":["routes/Pages/ComplianceModule/LegalCompliance/AddEditLegalCompliance/index.js"],"names":["initialBreadcrumbs","label","HEADER","DASHBOARD","link","AppHeader","props","classes","useStyles","handleOnSave","showForm","handleOnCancel","isEditable","setIsEditable","className","inBuildAppHeader","inBuildAppHeaderSidebar","style","color","onClick","e","history","back","inBuildAppHeaderTitle","component","variant","inBuildAppHeaderContent","ml","display","alignItems","backgroundColor","size","steps","SideBarIncident","activeStep","handleNext","handlePrev","setActiveStep","inBuildAppSidebar","perfectScrollbarContactSidebar","justifyItems","justifyContent","mt","disabled","m","length","appNav","data","renderRow","item","index","SideBarItem","key","labelRef","useRef","Fragment","ref","button","title","clsx","appNavItem","appTaskNavItem","active","completed","primary","ComplianceContent","dispatch","useDispatch","useSelector","subsidiaries","currentSubsidiary","departments","sections","subSections","utils","currencies","caseTypes","handleReset","isUpdate","complianceDetails","setComplianceDetails","useState","Date","selectedDeadline","setSelectedDeadline","initValue","id","name","useEffect","dateofNextHearing","moment","format","fees","fines","feesAmount","parseFloat","finesAmount","totalFees","computeTotalFees","fine","companyId","departmentsId","departmentsName","sectionsId","sectionsName","subSectionsId","subSectionsName","fetchSubsidiaries","fetchDepartments","fetchSections","fetchSubSections","fetchCaseTypes","fetchCurrencies","inBuildAppMainContent","minHeight","perfectScrollbarContactCon","p","width","md","xs","fullWidth","required","value","onChange","target","multiline","minRows","details","valueKey","labelKey","caseType","judgement","options","find","subsidiary","getOptionLabel","option","event","companyName","renderOption","selected","renderInput","params","filter","department","helperText","section","subSection","type","InputProps","startAdornment","position","select","penaltyCurrency","disableUnderline","map","autoOk","clearable","inputVariant","date","animateYearScrolling","managementComments","Preview","pb","flex","rawHTML","isView","inBuildAppCard","aria-label","tableHeader","tableHeaderCell","React","createElement","dangerouslySetInnerHTML","__html","caseFileAttachment","SuccessPage","flexDirection","src","instructions","marginTop","to","AddEditLegalCompliance","initialDetails","breadcrumbs","setBreadcrumbs","setIsUpdate","location","useLocation","undefined","state","LEGAL_COMPLIANCE","url","UPDATE_LEGAL_COMPLIANCE","isActive","CREATE_LEGAL_COMPLIANCE","heading","inBuildAppContainer","preventDefault","updateLegalCompliance","addLegalCompliance"],"mappings":"uoBAiDMA,EAAqB,CAAC,CAAEC,MAAOC,IAAOC,UAAWC,KAAM,MACvDC,GAAY,SAAAC,GAChB,IAAMC,EAAUC,cACRC,EAAsEH,EAAtEG,aAAcC,EAAwDJ,EAAxDI,SAAUC,EAA8CL,EAA9CK,eAAgBC,EAA8BN,EAA9BM,WAAYC,EAAkBP,EAAlBO,cAK5D,OACE,kBAAC,IAAD,CAAKC,UAAWP,EAAQQ,kBACtB,kBAAC,IAAD,CAAKD,UAAWP,EAAQS,yBAEtB,kBAAC,IAAD,CAAYC,MAAO,CAAEC,MAAO,SAAWC,QARrB,SAAAC,GAEtBC,QAAQC,SAOF,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAYR,UAAWP,EAAQgB,sBAAuBC,UAAU,MAAMC,QAAQ,MAA9E,eAIF,kBAAC,IAAD,CAAKX,UAAWP,EAAQmB,yBACrBhB,GACC,kBAAC,IAAD,CAAKiB,GAAG,OAAOC,QAAQ,OAAOC,WAAW,UACtCjB,EACC,oCACE,kBAAC,IAAD,CAAKe,GAAI,GACP,kBAAC,IAAD,CACEF,QAAS,YACTR,MAAO,CAAEa,gBAAiB,QAASZ,MAAO,SAC1Ca,KAAM,QACNZ,QAASV,GAJX,UAUJ,oCACE,kBAAC,IAAD,CAAKkB,GAAI,GACP,kBAAC,IAAD,CACEF,QAAS,YACTR,MAAO,CAAEa,gBAAiB,QAASZ,MAAO,SAC1Ca,KAAM,QACNZ,QAAS,kBAAMN,GAAc,KAJ/B,UAUN,kBAAC,IAAD,CAAKc,GAAI,GACP,kBAAC,IAAD,CACEF,QAAS,YACTR,MAAO,CAAEa,gBAAiB,UAAWZ,MAAO,SAC5Ca,KAAM,QACNZ,QAASR,GAJX,cAcRqB,GAAQ,CAAC,wBAAyB,aA4GlCC,GAAkB,SAAA3B,GACtB,IAAMC,EAAUC,cACR0B,EAAsD5B,EAAtD4B,WAAYC,EAA0C7B,EAA1C6B,WAAYC,EAA8B9B,EAA9B8B,WAAYC,EAAkB/B,EAAlB+B,cAC5C,OACE,kBAAC,IAAD,CAAKvB,UAAWP,EAAQ+B,mBACtB,kBAAC,IAAD,CAAkBxB,UAAWP,EAAQgC,gCACnC,kBAAC,IAAD,CAAKX,QAAQ,OAAOY,aAAc,SAAUC,eAAgB,SAAUC,GAAI,GACxE,kBAAC,IAAD,CAAYxB,MAAO,UAAWC,QAASiB,EAAYO,SAAyB,IAAfT,GAC3D,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAKU,EAAG,IACR,kBAAC,IAAD,CAAY1B,MAAO,UAAWC,QAASgB,EAAYQ,SAAUT,IAAeF,GAAMa,OAAS,GACzF,kBAAC,IAAD,QAGJ,kBAAC,IAAD,CAAKH,GAAI,GACP,kBAAC,IAAD,CAAMlB,UAAU,MAAMV,UAAWP,EAAQuC,QACvC,kBAAC,IAAD,CACEC,KAAMf,GACNgB,UAAW,SAACC,EAAMC,GAAP,OACT,kBAACC,GAAD,CAAmBC,IAAKF,EAAOA,QAAOhB,aAAYe,OAAM1C,UAAS8B,0BAS3Ec,GAAc,SAAA7C,GAClB,IAAQ4C,EAAoD5C,EAApD4C,MAAOD,EAA6C3C,EAA7C2C,KAAM1C,EAAuCD,EAAvCC,QAAS2B,EAA8B5B,EAA9B4B,WAAYG,EAAkB/B,EAAlB+B,cACpCgB,EAAWC,iBAAO,MAExB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CACEC,IAAKH,EACLI,QAAM,EACNC,MAAOT,EAEP9B,QAAS,SAAAC,GAAC,OAAIiB,EAAca,IAC5BpC,UAAW6C,YAAKpD,EAAQqD,WAAYrD,EAAQsD,eAAgB,CAC1DC,OAAQZ,IAAUhB,EAClB6B,UAAW7B,EAAagB,KAE1B,kBAAC,IAAD,CAAcc,QAASf,EAAMnC,UAAU,oBAKzCmD,GAAoB,SAAA3D,GAAU,IAAD,QAC3B4D,EAAWC,cACjB,EAA4CC,aAAY,qBAAGC,gBAAnDA,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,kBACdC,EAAgBH,aAAY,qBAAGG,eAA/BA,YACAC,EAAaJ,aAAY,qBAAGI,YAA5BA,SACAC,EAAgBL,aAAY,qBAAGK,eAA/BA,YACR,EAAkCL,aAAY,qBAAGM,SAAzCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UAElBrE,EASED,EATFC,QACA2B,EAQE5B,EARF4B,WACAC,EAOE7B,EAPF6B,WACA1B,EAMEH,EANFG,aAGA2B,GAGE9B,EALFuE,YAKEvE,EAJFwE,SAIExE,EAHF8B,YACA2C,EAEEzE,EAFFyE,kBACAC,EACE1E,EADF0E,qBAEF,EAAgDC,mBAAS,IAAIC,MAA7D,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAgCH,mBAAS,CAAC,MAAO,MAAO,QAAxD,mBACMI,GADN,UACkB,CAAEC,GAAI,GAAIC,KAAM,KAgHlC,OA9BAC,qBAAU,WACRR,EAAqB,2BAChBD,GADe,IAElBU,kBAAmBC,IAAOP,GAAkBQ,OAAO,mBAEpD,CAACR,IACJK,qBAAU,YAXe,SAACI,EAAMC,GAC9B,IAAMC,EAAsB,KAATF,EAAcG,WAAWH,GAAQ,EAC9CI,EAAwB,KAAVH,EAAeE,WAAWF,GAAS,EACvDb,EAAqB,2BAAKD,GAAN,IAAyBkB,UAAWH,EAAaE,KASrEE,CAAiBnB,EAAkBa,KAAMb,EAAkBoB,QAC1D,CAACpB,EAAkBa,KAAMb,EAAkBoB,OAC9CX,qBAAU,WACRR,EAAqB,2BAChBD,GADe,IAElBqB,UAAW9B,EACX+B,cAAe,KACfC,gBAAiB,GACjBC,WAAY,KACZC,aAAc,GACdC,cAAe,KACfC,gBAAiB,QAElB,CAACpC,IACJkB,qBAAU,WACRtB,EAASyC,eACTzC,EAAS0C,eACT1C,EAAS2C,eACT3C,EAAS4C,eACT5C,EAAS6C,eACT7C,EAAS8C,iBACR,IAGD,oCACE,kBAAC,IAAD,CAAKlG,UAAWP,EAAQ0G,sBAAuBC,UAAW,KACxD,kBAAC,IAAD,CAAkBpG,UAAWP,EAAQ4G,4BACnC,kBAAC,IAAD,CAAKC,EAAG,EAAGxF,QAAQ,QACD,IAAfM,GACC,kBAAC,IAAD,CAAKmF,MAAO,QACV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMpE,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACTC,UAAQ,EACRhG,QAAQ,WACRxB,MAAO,aACPyH,MAAO3C,EAAkBrB,MACzBiE,SAAU,SAAAvG,GAAC,OAAI4D,EAAqB,2BAAKD,GAAN,IAAyBrB,MAAOtC,EAAEwG,OAAOF,aAGhF,kBAAC,IAAD,CAAMzE,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACTK,WAAS,EACTC,QAAS,EACTrG,QAAQ,WACRxB,MAAO,eACPyH,MAAO3C,EAAkBgD,QACzBJ,SAAU,SAAAvG,GAAC,OAAI4D,EAAqB,2BAAKD,GAAN,IAAyBgD,QAAS3G,EAAEwG,OAAOF,aAGlF,kBAAC,IAAD,CAAMzE,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACTC,UAAQ,EACR1E,KAAM6B,EACN3E,MAAM,YACN+H,SAAS,OACTvG,QAAQ,WACRwG,SAAS,OACTP,MAAO3C,EAAkBmD,SACzBP,SAAU,SAAAvG,GAAC,OAAI4D,EAAqB,2BAAKD,GAAN,IAAyBmD,SAAU9G,EAAEwG,OAAOF,aAGnF,kBAAC,IAAD,CAAMzE,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACT/F,QAAQ,WACRxB,MAAM,YACN4H,WAAS,EACTC,QAAS,EACTJ,MAAO3C,EAAkBoD,UACzBR,SAAU,SAAAvG,GAAC,OAAI4D,EAAqB,2BAAKD,GAAN,IAAyBoD,UAAW/G,EAAEwG,OAAOF,aAGpF,kBAAC,IAAD,CAAMzE,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACTY,QAAS/D,EACTqD,MAAK,iBAAErD,QAAF,IAAEA,OAAF,EAAEA,EAAcgE,MAAK,SAAAC,GAAU,OAAIA,EAAWhD,KAAOP,EAAkBqB,oBAAvE,QAAqFf,EAC1FkD,eAAgB,SAAAC,GAAM,OAAIA,EAAOjD,MACjCoC,SA1Ka,SAACc,EAAOf,GAErC1C,EADY,OAAV0C,EACmB,2BAChB3C,GADe,IAElBqB,UAAWsB,EAAMpC,GACjBoD,YAAahB,EAAMnC,KACnBc,cAAe,KACfC,gBAAiB,GACjBC,WAAY,KACZC,aAAc,GACdC,cAAe,KACfC,gBAAiB,KAGE,2BAChB3B,GADe,IAElBqB,UAAW,KACXsC,YAAa,GACbrC,cAAe,KACfC,gBAAiB,GACjBC,WAAY,KACZC,aAAc,GACdC,cAAe,KACfC,gBAAiB,OAoJHiC,aAAc,SAACH,EAAD,KAAWI,SAAX,OAA0B,0BAAMxF,IAAKoF,EAAOlD,IAAKkD,EAAOjD,OACtEsD,YAAa,SAAAC,GAAM,OACjB,kBAAC,IAAD,eAAWrB,UAAQ,EAACD,WAAS,GAAKsB,EAAlC,CAA0C/G,KAAM,QAASN,QAAS,WAAYxB,MAAM,oBAI1F,kBAAC,IAAD,CAAMgD,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACTY,QAAS7D,EAAYwE,QAAO,SAAAC,GAAU,OAAIA,EAAW5C,WAAarB,EAAkBqB,aACpFsB,MAAK,UAAEnD,EAAY8D,MAAK,SAAAW,GAAU,OAAIA,EAAW1D,KAAOP,EAAkBsB,wBAArE,QAAuFhB,EAC5FkD,eAAgB,SAAAC,GAAM,OAAIA,EAAOjD,MACjCoC,SA5Ja,SAACc,EAAOf,GAErC1C,EADY,OAAV0C,EACmB,2BAChB3C,GADe,IAElBsB,cAAeqB,EAAMpC,GACrBgB,gBAAiBoB,EAAMnC,KACvBgB,WAAY,KACZC,aAAc,GACdC,cAAe,KACfC,gBAAiB,KAGE,2BAChB3B,GADe,IAElBsB,cAAe,KACfC,gBAAiB,GACjBC,WAAY,KACZC,aAAc,GACdC,cAAe,KACfC,gBAAiB,OA0IHiC,aAAc,SAACH,EAAD,KAAWI,SAAX,OAA0B,0BAAMxF,IAAKoF,EAAOlD,IAAKkD,EAAOjD,OACtEsD,YAAa,SAAAC,GAAM,OACjB,kBAAC,IAAD,eACEG,WAA4C,OAAhClE,EAAkBqB,UAAqB,oBAAsB,GACzEoB,WAAS,GACLsB,EAHN,CAIE/G,KAAM,QACNN,QAAS,WACTxB,MAAM,oBAKd,kBAAC,IAAD,CAAMgD,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACTY,QAAS5D,EAASuE,QAAO,SAAAG,GAAO,OAAIA,EAAQ7C,eAAiBtB,EAAkBsB,iBAC/EqB,MAAK,UAAElD,EAAS6D,MAAK,SAAAa,GAAO,OAAIA,EAAQ5D,KAAOP,EAAkBwB,qBAA5D,QAA2ElB,EAChFkD,eAAgB,SAAAC,GAAM,OAAIA,EAAOjD,MACjCoC,SAzJU,SAACc,EAAOf,GAElC1C,EADY,OAAV0C,EACmB,2BAChB3C,GADe,IAElBwB,WAAYmB,EAAMpC,GAClBkB,aAAckB,EAAMnC,KACpBkB,cAAe,KACfC,gBAAiB,KAGE,2BAChB3B,GADe,IAElBwB,WAAY,KACZC,aAAc,GACdC,cAAe,KACfC,gBAAiB,OA2IHiC,aAAc,SAACH,EAAD,KAAWI,SAAX,OAA0B,0BAAMxF,IAAKoF,EAAOlD,IAAKkD,EAAOjD,OACtEsD,YAAa,SAAAC,GAAM,OACjB,kBAAC,IAAD,eACEG,WAAgD,OAApClE,EAAkBsB,cAAyB,oBAAsB,GAC7EmB,WAAS,GACLsB,EAHN,CAIE/G,KAAM,QACNN,QAAS,WACTxB,MAAM,iBAKd,kBAAC,IAAD,CAAMgD,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACTY,QAAS3D,EAAYsE,QAAO,SAAAI,GAAU,OAAIA,EAAW5C,YAAcxB,EAAkBwB,cACrFmB,MAAK,UAAEjD,EAAY4D,MAAK,SAAAc,GAAU,OAAIA,EAAW7D,KAAOP,EAAkBwB,qBAArE,QAAoFlB,EACzFkD,eAAgB,SAAAC,GAAM,OAAIA,EAAOjD,MACjCoC,SA1Ja,SAACc,EAAOf,GAErC1C,EADY,OAAV0C,EACmB,2BAAK3C,GAAN,IAAyB0B,cAAeiB,EAAMpC,GAAIoB,gBAAiBgB,EAAMnC,OAExE,2BAAKR,GAAN,IAAyB0B,cAAe,KAAMC,gBAAiB,OAuJnEiC,aAAc,SAACH,EAAD,KAAWI,SAAX,OAA0B,0BAAMxF,IAAKoF,EAAOlD,IAAKkD,EAAOjD,OACtEsD,YAAa,SAAAC,GAAM,OACjB,kBAAC,IAAD,eACEG,WAA6C,OAAjClE,EAAkBwB,WAAsB,iBAAmB,GACvEiB,WAAS,GACLsB,EAHN,CAIE/G,KAAM,QACNN,QAAS,WACTxB,MAAM,qBAKd,kBAAC,IAAD,CAAMgD,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACTvH,MAAM,OACNmJ,KAAM,SACN3H,QAAQ,WACRiG,MAAO3C,EAAkBa,KACzB+B,SAAU,SAAAvG,GACR4D,EAAqB,2BAAKD,GAAN,IAAyBa,KAAMxE,EAAEwG,OAAOF,UAE9D2B,WAAY,CACVC,eACE,kBAAC,IAAD,CAAgBC,SAAS,SACvB,kBAAC,IAAD,CACEC,QAAM,EACNvI,MAAO,CAAEoG,MAAO,QAChBpH,MAAM,GACNyH,MAAO3C,EAAkB0E,gBACzB9B,SAAU,SAAAvG,GAAC,OAAI4D,EAAqB,2BAAKD,GAAN,IAAyB0E,gBAAiBrI,EAAEwG,OAAOF,UACtF2B,WAAY,CACVK,kBAAkB,IAEnB/E,EAAWgF,KAAI,SAAAnB,GAAM,OACpB,kBAAC,IAAD,CAAUpF,IAAKoF,EAAOlD,GAAIoC,MAAOc,EAAOjD,MACrCiD,EAAOjD,eASxB,kBAAC,IAAD,CAAMtC,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACTvH,MAAM,QACNmJ,KAAM,SACN3H,QAAQ,WACRiG,MAAO3C,EAAkBoB,KACzBwB,SAAU,SAAAvG,GACR4D,EAAqB,2BAAKD,GAAN,IAAyBoB,KAAM/E,EAAEwG,OAAOF,UAE9D2B,WAAY,CACVC,eACE,kBAAC,IAAD,CAAgBC,SAAS,SACvB,kBAAC,IAAD,CACEC,QAAM,EACNvI,MAAO,CAAEoG,MAAO,QAChBpH,MAAM,GACNyH,MAAO3C,EAAkB0E,gBACzB9B,SAAU,SAAAvG,GAAC,OAAI4D,EAAqB,2BAAKD,GAAN,IAAyB0E,gBAAiBrI,EAAEwG,OAAOF,UACtF2B,WAAY,CACVK,kBAAkB,IAEnB/E,EAAWgF,KAAI,SAAAnB,GAAM,OACpB,kBAAC,IAAD,CAAUpF,IAAKoF,EAAQd,MAAOc,EAAOjD,MAClCiD,EAAOjD,eASxB,kBAAC,IAAD,CAAMtC,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACTvH,MAAM,qBACNmJ,KAAM,SACN3H,QAAQ,WACRiG,MAAO3C,EAAkBkB,UACzB0B,SAAU,SAAAvG,GACR4D,EAAqB,2BAAKD,GAAN,IAAyBkB,UAAW7E,EAAEwG,OAAOF,UAEnE/E,UAAQ,EACR0G,WAAY,CACVC,eACE,kBAAC,IAAD,CAAgBC,SAAS,SACvB,kBAAC,IAAD,CACEC,QAAM,EACN7G,UAAQ,EACR1B,MAAO,CAAEoG,MAAO,QAChBpH,MAAM,GACNyH,MAAO3C,EAAkB0E,gBACzB9B,SAAU,SAAAvG,GAAC,OAAI4D,EAAqB,2BAAKD,GAAN,IAAyB0E,gBAAiBrI,EAAEwG,OAAOF,UACtF2B,WAAY,CACVK,kBAAkB,IAEnB/E,EAAWgF,KAAI,SAAAnB,GAAM,OACpB,kBAAC,IAAD,CAAUpF,IAAKoF,EAAQd,MAAOc,EAAOjD,MAClCiD,EAAOjD,eASxB,kBAAC,IAAD,CAAMtC,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEqC,QAAM,EACNpC,WAAS,EACTqC,WAAS,EACTC,aAAc,WACd7J,MAAM,uBACN0H,SAAU,SAAAoC,GACR3E,EAAoB2E,IAEtBrC,MAC0C,KAAxC3C,EAAkBU,kBAA2BV,EAAkBU,kBAAoBN,EAErFQ,OAAO,aACPqE,sBAAoB,KAGxB,kBAAC,IAAD,CAAM/G,MAAI,EAACqE,GAAI,GAAIC,GAAI,IACrB,kBAAC,IAAD,CACEC,WAAS,EACT/F,QAAQ,WACRxB,MAAM,sBACN4H,WAAS,EACTC,QAAS,EACTJ,MAAO3C,EAAkBkF,mBACzBtC,SAAU,SAAAvG,GAAC,OAAI4D,EAAqB,2BAAKD,GAAN,IAAyBkF,mBAAoB7I,EAAEwG,OAAOF,eAMnF,IAAfxF,GACC,kBAAC,IAAD,CAAKmF,MAAO,QACV,kBAAC6C,GAAD,CAAenF,wBAIrB,kBAAC,IAAD,CAAKnD,QAAQ,OAAOgB,EAAG,EAAGuH,GAAI,GAC3BjI,IAAeF,GAAMa,OAAS,GAC7B,kBAAC,IAAD,CAAQ1B,QAASiB,EAAYX,QAAS,YAAaP,MAAO,UAAWa,KAAM,SAA3E,QAIF,kBAAC,IAAD,CAAKqI,KAAM,aACVlI,IAAeF,GAAMa,OAAS,GAC7B,kBAAC,IAAD,CAAQ1B,QAASgB,EAAYV,QAAS,YAAaP,MAAO,UAAWa,KAAM,SAA3E,YAIDG,IAAeF,GAAMa,OAAS,GAC7B,kBAAC,IAAD,CAAQ1B,QAASV,EAAcgB,QAAS,YAAaP,MAAO,UAAWa,KAAM,SAA7E,aAUDmI,GAAU,SAAA5J,GACrB,IACmB+J,EADXtF,EAA8BzE,EAA9ByE,kBAAmBuF,EAAWhK,EAAXgK,OAErB/J,EAAUC,cAChB,OACE,kBAAC,IAAD,CAAgBM,UAAWP,EAAQgK,gBACjC,kBAAC,IAAD,CAAOxI,KAAK,QAAQyI,aAAW,kBAC3BF,GACA,kBAAC,IAAD,CAAWxJ,UAAWP,EAAQkK,aAC5B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAW3J,UAAWP,EAAQmK,iBAA9B,cACA,kBAAC,IAAD,CAAW5J,UAAWP,EAAQmK,iBAA9B,iBAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,0CAEF,kBAAC,IAAD,KAAwC,KAA5B3F,EAAkBrB,MAAeqB,EAAkBrB,MAAQ,YAEzE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,4CAEF,kBAAC,IAAD,KAA0C,KAA9BqB,EAAkBgD,SAxBrBsC,EAwBiDtF,EAAkBgD,QAxBxD4C,IAAMC,cAAc,MAAO,CAAEC,wBAAyB,CAAEC,OAAQT,MAwBG,YAEzF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yCAEF,kBAAC,IAAD,KAA2C,KAA/BtF,EAAkBmD,SAAkBnD,EAAkBmD,SAAW,YAE/E,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yCAEF,kBAAC,IAAD,KAA4C,KAAhCnD,EAAkBoD,UAAmBpD,EAAkBoD,UAAY,YAEjF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uCAEF,kBAAC,IAAD,KAA8C,KAAlCpD,EAAkB2D,YAAqB3D,EAAkB2D,YAAc,YAErF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,0CAEF,kBAAC,IAAD,KAAkD,KAAtC3D,EAAkBuB,gBAAyBvB,EAAkBuB,gBAAkB,YAE7F,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uCAEF,kBAAC,IAAD,KAA+C,KAAnCvB,EAAkByB,aAAsBzB,EAAkByB,aAAe,YAEvF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,2CAEF,kBAAC,IAAD,KAAkD,KAAtCzB,EAAkB2B,gBAAyB3B,EAAkB2B,gBAAkB,YAG7F,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,sCAAY3B,EAAkB0E,kBAEhC,kBAAC,IAAD,KAAuC,KAA3B1E,EAAkBa,KAAcb,EAAkBa,KAAO,YAEvE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uCAAab,EAAkB0E,kBAEjC,kBAAC,IAAD,KAAuC,KAA3B1E,EAAkBoB,KAAcpB,EAAkBoB,KAAO,YAEvE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,oDAA0BpB,EAAkB0E,kBAE9C,kBAAC,IAAD,KAA4C,KAAhC1E,EAAkBkB,UAAmBlB,EAAkBkB,UAAY,YAEjF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,oDAEF,kBAAC,IAAD,KAC2C,KAAxClB,EAAkBU,kBAA2BV,EAAkBU,kBAAoB,YAGxF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,mDAEF,kBAAC,IAAD,KAC4C,KAAzCV,EAAkBkF,mBAA4BlF,EAAkBkF,mBAAqB,YAG1F,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,oDAEF,kBAAC,IAAD,KAC4C,KAAzClF,EAAkBgG,mBAA4BhG,EAAkBgG,mBAAqB,qBAQ9FC,GAAc,SAAA1K,GAClB,IAAQC,EAAmCD,EAAnCC,QAASsE,EAA0BvE,EAA1BuE,YAAaC,EAAaxE,EAAbwE,SAC9B,OACE,kBAAC,IAAD,CAAKlD,QAAQ,OAAOa,eAAe,SAASZ,WAAW,SAASoJ,cAAc,UAC5E,kBAAC,IAAD,CAAUC,IAAK,oBAAqBjK,MAAO,CAAEoG,MAAO,UACpD,uBAAGvG,UAAWP,EAAQ4K,aAAclK,MAAO,CAAEmK,UAAW,SACtD,6CAAmBtG,EAAW,UAAY,UAA1C,mBAEF,kBAAC,IAAD,CAAKpC,GAAI,IACP,kBAAC,IAAD,CAAM2I,GAAI,gCACR,kBAAC,IAAD,CAAQnK,MAAO,UAAWO,QAAS,aAAnC,kCAIAqD,GACA,kBAAC,IAAD,CAAQ3D,QAAS0D,EAAa/D,UAAWP,EAAQkD,QAAjD,4BASK6H,UAxsBgB,WAC7B,IAAM/K,EAAUC,cACV0D,EAAWC,cACjB,EAAoCc,mBAAS,GAA7C,mBAAO/C,EAAP,KAAmBG,EAAnB,KACMkJ,EAAiB,CACrB7H,MAAO,GACPqE,QAAS,GACTI,UAAW,GACX/B,UAAW,GACXC,cAAe,KACfC,gBAAiB,KACjBC,WAAY,KACZC,aAAc,KACdC,cAAe,KACfC,gBAAiB,KACjBP,KAAM,EACNP,KAAM,EACNK,UAAW,EACXwD,gBAAiB,MACjBQ,mBAAoB,GACpBnG,QAAQ,EACR2B,kBAAmBC,IAAO,IAAIR,MAAQS,OAAO,cAC7CuC,SAAU,GACV6C,mBAAoB,IAEtB,EAAkD9F,mBAASsG,GAA3D,mBAAOxG,EAAP,KAA0BC,EAA1B,KACA,EAAsCC,mBAASjF,GAA/C,mBAAOwL,EAAP,KAAoBC,EAApB,KACA,EAAgCxG,oBAAS,GAAzC,mBAAOH,EAAP,KAAiB4G,EAAjB,KACMC,EAAWC,cACXzJ,EAAa,WACjBE,EAAcH,EAAa,IAEvBE,EAAa,WACjBC,EAAcH,EAAa,IAEvB2C,EAAc,WAClBG,EAAqBuG,GACrBG,GAAY,GACZrJ,EAAc,IAgChB,OApBAmD,qBAAU,gBACeqG,IAAnBF,EAASG,OACXL,EAAe,GAAD,mBACTD,GADS,CAEZ,CAAEvL,MAAOC,IAAO6L,iBAAiBxG,KAAMnF,KAAK,eAAD,OAAiBF,IAAO6L,iBAAiBC,MACpF,CAAE/L,MAAOC,IAAO+L,wBAAyBC,UAAU,MAErDlH,EAAqB2G,EAASG,OAC9BJ,GAAY,KAEZD,EAAe,GAAD,mBACTD,GADS,CAEZ,CAAEvL,MAAOC,IAAO6L,iBAAiBxG,KAAMnF,KAAK,eAAD,OAAiBF,IAAO6L,iBAAiBC,MACpF,CAAE/L,MAAOC,IAAOiM,wBAAyBD,UAAU,MAErDlH,EAAqBuG,GACrBG,GAAY,MAEb,CAACC,IAGF,kBAAC,IAAMpI,SAAP,KACE,kBAAC,IAAD,CACE6I,QAAStH,EAAW5E,IAAO+L,wBAA0B/L,IAAOiM,wBAC5DX,YAAaA,GACb,kBAAC,IAAD,CAAK1K,UAAWP,EAAQgK,gBACtB,kBAAClK,GAAD,MACC6B,IAAeF,GAAMa,OACpB,kBAAC,IAAD,CAAK/B,UAAW6C,YAAKpD,EAAQ8L,qBAAsBnF,UAAW,KAC5D,kBAAC,IAAD,CAAKG,MAAO,OAAQzE,EAAG,GACrB,kBAACoI,GAAD,CAAmBzK,UAASsE,cAAaC,eAI7C,kBAAC,IAAD,CAAKhE,UAAW6C,YAAKpD,EAAQ8L,sBAC3B,kBAACpK,GAAD,CAAuBC,aAAYC,aAAYC,aAAYC,kBAC3D,kBAAC4B,GAAD,CAEI1D,UACAuE,WACA5C,aACAC,aACAC,aACAyC,cACAE,oBACAC,uBACAvE,aAxDK,SAAAW,GACnBA,EAAEkL,iBACF,IAAIvJ,EAAI,2BAAQgC,GAAR,IAA2Ba,KAAMG,WAAWhB,EAAkBa,MAAOO,KAAMJ,WAAWhB,EAAkBoB,QAE9GjC,EADEY,EACOyH,YAAsBxJ,GAAM,kBAAMZ,OAElCqK,YAAmBzJ,GAAM,kBAAMZ,cAyDxC,kBAAC,wBAAD","file":"static/js/1.0e94d33b.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport PageContainer from '../../../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { HEADER } from '../../../../../@jumbo/constants/HeaderMessages';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport useStyles from '../../../Roles/index.style';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { ArrowBackIos, ArrowForwardIos } from '@mui/icons-material';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport CmtList from '../../../../../@coremat/CmtList';\r\nimport List from '@material-ui/core/List';\r\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\r\nimport AppTextInput from '../../../../../@jumbo/components/Common/formElements/AppTextInput';\r\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\r\nimport { frequencies, priority } from '../../dummyData';\r\nimport { DatePicker } from '@material-ui/pickers';\r\nimport moment from 'moment';\r\nimport { departmentList, sectionsList, subSectionList, usersList } from '../../../Organization/dummyData';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addLegalCompliance, updateLegalCompliance } from '../../../../../redux/actions/Compliance';\r\nimport { fetchRoles } from '../../../../../redux/actions/Roles';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport { fetchSubsidiaries } from '../../../../../redux/actions/Subsidiaries';\r\nimport { fetchDepartments } from '../../../../../redux/actions/Departments';\r\nimport { fetchSubSections } from '../../../../../redux/actions/SubSections';\r\nimport { fetchSections } from '../../../../../redux/actions/Sections';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { fetchCaseTypes, fetchCurrencies } from '../../../../../redux/actions/Utils';\r\n\r\nconst initialBreadcrumbs = [{ label: HEADER.DASHBOARD, link: '/' }];\r\nconst AppHeader = props => {\r\n  const classes = useStyles();\r\n  const { handleOnSave, showForm, handleOnCancel, isEditable, setIsEditable } = props;\r\n  const handleBackClick = e => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    history.back();\r\n  };\r\n  return (\r\n    <Box className={classes.inBuildAppHeader}>\r\n      <Box className={classes.inBuildAppHeaderSidebar}>\r\n        {/*<CmtImage src={'/images/roles.png'} style={{ width: '50px' }} />*/}\r\n        <IconButton style={{ color: 'white' }} onClick={handleBackClick}>\r\n          <ArrowBack />\r\n        </IconButton>\r\n        <Typography className={classes.inBuildAppHeaderTitle} component=\"div\" variant=\"h1\">\r\n          Compliance\r\n        </Typography>\r\n      </Box>\r\n      <Box className={classes.inBuildAppHeaderContent}>\r\n        {showForm && (\r\n          <Box ml=\"auto\" display=\"flex\" alignItems=\"center\">\r\n            {isEditable ? (\r\n              <>\r\n                <Box ml={1}>\r\n                  <Button\r\n                    variant={'contained'}\r\n                    style={{ backgroundColor: 'green', color: 'white' }}\r\n                    size={'small'}\r\n                    onClick={handleOnSave}>\r\n                    Save\r\n                  </Button>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Box ml={1}>\r\n                  <Button\r\n                    variant={'contained'}\r\n                    style={{ backgroundColor: 'green', color: 'white' }}\r\n                    size={'small'}\r\n                    onClick={() => setIsEditable(true)}>\r\n                    Edit\r\n                  </Button>\r\n                </Box>\r\n              </>\r\n            )}\r\n            <Box ml={1}>\r\n              <Button\r\n                variant={'contained'}\r\n                style={{ backgroundColor: 'darkred', color: 'white' }}\r\n                size={'small'}\r\n                onClick={handleOnCancel}>\r\n                Close\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nconst steps = ['1. Compliance Details', '2. Finish'];\r\nconst AddEditLegalCompliance = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const initialDetails = {\r\n    title: '',\r\n    details: '',\r\n    judgement: '',\r\n    companyId: '',\r\n    departmentsId: null,\r\n    departmentsName: null,\r\n    sectionsId: null,\r\n    sectionsName: null,\r\n    subSectionsId: null,\r\n    subSectionsName: null,\r\n    fine: 0,\r\n    fees: 0,\r\n    totalFees: 0,\r\n    penaltyCurrency: 'KES',\r\n    managementComments: '',\r\n    active: true,\r\n    dateofNextHearing: moment(new Date()).format('YYYY-MM-DD'),\r\n    caseType: '',\r\n    caseFileAttachment: '',\r\n  };\r\n  const [complianceDetails, setComplianceDetails] = useState(initialDetails);\r\n  const [breadcrumbs, setBreadcrumbs] = useState(initialBreadcrumbs);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const location = useLocation();\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n  const handlePrev = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  const handleReset = () => {\r\n    setComplianceDetails(initialDetails);\r\n    setIsUpdate(false);\r\n    setActiveStep(0);\r\n  };\r\n  const handleOnSave = e => {\r\n    e.preventDefault();\r\n    let data = { ...complianceDetails, fees: parseFloat(complianceDetails.fees), fine: parseFloat(complianceDetails.fine) };\r\n    if (isUpdate) {\r\n      dispatch(updateLegalCompliance(data, () => handleNext()));\r\n    } else {\r\n      dispatch(addLegalCompliance(data, () => handleNext()));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.state !== undefined) {\r\n      setBreadcrumbs([\r\n        ...breadcrumbs,\r\n        { label: HEADER.LEGAL_COMPLIANCE.name, link: `/compliance/${HEADER.LEGAL_COMPLIANCE.url}` },\r\n        { label: HEADER.UPDATE_LEGAL_COMPLIANCE, isActive: true },\r\n      ]);\r\n      setComplianceDetails(location.state);\r\n      setIsUpdate(true);\r\n    } else {\r\n      setBreadcrumbs([\r\n        ...breadcrumbs,\r\n        { label: HEADER.LEGAL_COMPLIANCE.name, link: `/compliance/${HEADER.LEGAL_COMPLIANCE.url}` },\r\n        { label: HEADER.CREATE_LEGAL_COMPLIANCE, isActive: true },\r\n      ]);\r\n      setComplianceDetails(initialDetails);\r\n      setIsUpdate(false);\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PageContainer\r\n        heading={isUpdate ? HEADER.UPDATE_LEGAL_COMPLIANCE : HEADER.CREATE_LEGAL_COMPLIANCE}\r\n        breadcrumbs={breadcrumbs}>\r\n        <Box className={classes.inBuildAppCard}>\r\n          <AppHeader />\r\n          {activeStep === steps.length ? (\r\n            <Box className={clsx(classes.inBuildAppContainer)} minHeight={400}>\r\n              <Box width={'100%'} m={5}>\r\n                <SuccessPage {...{ classes, handleReset, isUpdate }} />\r\n              </Box>\r\n            </Box>\r\n          ) : (\r\n            <Box className={clsx(classes.inBuildAppContainer)}>\r\n              <SideBarIncident {...{ activeStep, handleNext, handlePrev, setActiveStep }} />\r\n              <ComplianceContent\r\n                {...{\r\n                  classes,\r\n                  isUpdate,\r\n                  activeStep,\r\n                  handleNext,\r\n                  handlePrev,\r\n                  handleReset,\r\n                  complianceDetails,\r\n                  setComplianceDetails,\r\n                  handleOnSave,\r\n                }}\r\n              />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </PageContainer>\r\n      <NotificationContainer />\r\n    </React.Fragment>\r\n  );\r\n};\r\nconst SideBarIncident = props => {\r\n  const classes = useStyles();\r\n  const { activeStep, handleNext, handlePrev, setActiveStep } = props;\r\n  return (\r\n    <Box className={classes.inBuildAppSidebar}>\r\n      <PerfectScrollbar className={classes.perfectScrollbarContactSidebar}>\r\n        <Box display=\"flex\" justifyItems={'center'} justifyContent={'center'} mt={2}>\r\n          <IconButton color={'primary'} onClick={handlePrev} disabled={activeStep === 0}>\r\n            <ArrowBackIos />\r\n          </IconButton>\r\n          <Box m={1} />\r\n          <IconButton color={'primary'} onClick={handleNext} disabled={activeStep === steps.length - 1}>\r\n            <ArrowForwardIos />\r\n          </IconButton>\r\n        </Box>\r\n        <Box mt={5}>\r\n          <List component=\"nav\" className={classes.appNav}>\r\n            <CmtList\r\n              data={steps}\r\n              renderRow={(item, index) => (\r\n                <SideBarItem {...{ key: index, index, activeStep, item, classes, setActiveStep }} />\r\n              )}\r\n            />\r\n          </List>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n    </Box>\r\n  );\r\n};\r\nconst SideBarItem = props => {\r\n  const { index, item, classes, activeStep, setActiveStep } = props;\r\n  const labelRef = useRef(null);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem\r\n        ref={labelRef}\r\n        button\r\n        title={item}\r\n        //disabled={activeStep < index}\r\n        onClick={e => setActiveStep(index)}\r\n        className={clsx(classes.appNavItem, classes.appTaskNavItem, {\r\n          active: index === activeStep,\r\n          completed: activeStep > index,\r\n        })}>\r\n        <ListItemText primary={item} className=\"Cmt-nav-text\" />\r\n      </ListItem>\r\n    </React.Fragment>\r\n  );\r\n};\r\nconst ComplianceContent = props => {\r\n  const dispatch = useDispatch();\r\n  const { subsidiaries, currentSubsidiary } = useSelector(({ subsidiaries }) => subsidiaries);\r\n  const { departments } = useSelector(({ departments }) => departments);\r\n  const { sections } = useSelector(({ sections }) => sections);\r\n  const { subSections } = useSelector(({ subSections }) => subSections);\r\n  const { currencies, caseTypes } = useSelector(({ utils }) => utils);\r\n  const {\r\n    classes,\r\n    activeStep,\r\n    handleNext,\r\n    handleOnSave,\r\n    handleReset,\r\n    isUpdate,\r\n    handlePrev,\r\n    complianceDetails,\r\n    setComplianceDetails,\r\n  } = props;\r\n  const [selectedDeadline, setSelectedDeadline] = useState(new Date());\r\n  const [currency, setCurrency] = useState(['KES', 'USD', 'EUR']);\r\n  const initValue = { id: '', name: '' };\r\n  const handleOnSubsidiaryChange = (event, value) => {\r\n    if (value !== null) {\r\n      setComplianceDetails({\r\n        ...complianceDetails,\r\n        companyId: value.id,\r\n        companyName: value.name,\r\n        departmentsId: null,\r\n        departmentsName: '',\r\n        sectionsId: null,\r\n        sectionsName: '',\r\n        subSectionsId: null,\r\n        subSectionsName: '',\r\n      });\r\n    } else {\r\n      setComplianceDetails({\r\n        ...complianceDetails,\r\n        companyId: null,\r\n        companyName: '',\r\n        departmentsId: null,\r\n        departmentsName: '',\r\n        sectionsId: null,\r\n        sectionsName: '',\r\n        subSectionsId: null,\r\n        subSectionsName: '',\r\n      });\r\n    }\r\n  };\r\n  const handleOnDepartmentChange = (event, value) => {\r\n    if (value !== null) {\r\n      setComplianceDetails({\r\n        ...complianceDetails,\r\n        departmentsId: value.id,\r\n        departmentsName: value.name,\r\n        sectionsId: null,\r\n        sectionsName: '',\r\n        subSectionsId: null,\r\n        subSectionsName: '',\r\n      });\r\n    } else {\r\n      setComplianceDetails({\r\n        ...complianceDetails,\r\n        departmentsId: null,\r\n        departmentsName: '',\r\n        sectionsId: null,\r\n        sectionsName: '',\r\n        subSectionsId: null,\r\n        subSectionsName: '',\r\n      });\r\n    }\r\n  };\r\n  const handleOnSectionChange = (event, value) => {\r\n    if (value !== null) {\r\n      setComplianceDetails({\r\n        ...complianceDetails,\r\n        sectionsId: value.id,\r\n        sectionsName: value.name,\r\n        subSectionsId: null,\r\n        subSectionsName: '',\r\n      });\r\n    } else {\r\n      setComplianceDetails({\r\n        ...complianceDetails,\r\n        sectionsId: null,\r\n        sectionsName: '',\r\n        subSectionsId: null,\r\n        subSectionsName: '',\r\n      });\r\n    }\r\n  };\r\n  const handleOnSubSectionChange = (event, value) => {\r\n    if (value !== null) {\r\n      setComplianceDetails({ ...complianceDetails, subSectionsId: value.id, subSectionsName: value.name });\r\n    } else {\r\n      setComplianceDetails({ ...complianceDetails, subSectionsId: null, subSectionsName: '' });\r\n    }\r\n  };\r\n  const computeTotalFees = (fees, fines) => {\r\n    const feesAmount = fees !== '' ? parseFloat(fees) : 0;\r\n    const finesAmount = fines !== '' ? parseFloat(fines) : 0;\r\n    setComplianceDetails({ ...complianceDetails, totalFees: feesAmount + finesAmount });\r\n  };\r\n  useEffect(() => {\r\n    setComplianceDetails({\r\n      ...complianceDetails,\r\n      dateofNextHearing: moment(selectedDeadline).format('YYYY-MM-DD'),\r\n    });\r\n  }, [selectedDeadline]);\r\n  useEffect(() => {\r\n    computeTotalFees(complianceDetails.fees, complianceDetails.fine);\r\n  }, [complianceDetails.fees, complianceDetails.fine]);\r\n  useEffect(() => {\r\n    setComplianceDetails({\r\n      ...complianceDetails,\r\n      companyId: currentSubsidiary,\r\n      departmentsId: null,\r\n      departmentsName: '',\r\n      sectionsId: null,\r\n      sectionsName: '',\r\n      subSectionsId: null,\r\n      subSectionsName: '',\r\n    });\r\n  }, [currentSubsidiary]);\r\n  useEffect(() => {\r\n    dispatch(fetchSubsidiaries());\r\n    dispatch(fetchDepartments());\r\n    dispatch(fetchSections());\r\n    dispatch(fetchSubSections());\r\n    dispatch(fetchCaseTypes());\r\n    dispatch(fetchCurrencies());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.inBuildAppMainContent} minHeight={400}>\r\n        <PerfectScrollbar className={classes.perfectScrollbarContactCon}>\r\n          <Box p={5} display=\"flex\">\r\n            {activeStep === 0 && (\r\n              <Box width={'100%'}>\r\n                <GridContainer>\r\n                  <Grid item md={12} xs={12}>\r\n                    <AppTextInput\r\n                      fullWidth\r\n                      required\r\n                      variant=\"outlined\"\r\n                      label={'Case Title'}\r\n                      value={complianceDetails.title}\r\n                      onChange={e => setComplianceDetails({ ...complianceDetails, title: e.target.value })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <AppTextInput\r\n                      fullWidth\r\n                      multiline\r\n                      minRows={4}\r\n                      variant=\"outlined\"\r\n                      label={'Case Details'}\r\n                      value={complianceDetails.details}\r\n                      onChange={e => setComplianceDetails({ ...complianceDetails, details: e.target.value })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <AppSelectBox\r\n                      fullWidth\r\n                      required\r\n                      data={caseTypes}\r\n                      label=\"Case Type\"\r\n                      valueKey=\"name\"\r\n                      variant=\"outlined\"\r\n                      labelKey=\"name\"\r\n                      value={complianceDetails.caseType}\r\n                      onChange={e => setComplianceDetails({ ...complianceDetails, caseType: e.target.value })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <AppTextInput\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      label=\"Judgement\"\r\n                      multiline\r\n                      minRows={5}\r\n                      value={complianceDetails.judgement}\r\n                      onChange={e => setComplianceDetails({ ...complianceDetails, judgement: e.target.value })}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <Autocomplete\r\n                      fullWidth\r\n                      options={subsidiaries}\r\n                      value={subsidiaries?.find(subsidiary => subsidiary.id === complianceDetails.companyId) ?? initValue}\r\n                      getOptionLabel={option => option.name}\r\n                      onChange={handleOnSubsidiaryChange}\r\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\r\n                      renderInput={params => (\r\n                        <TextField required fullWidth {...params} size={'small'} variant={'outlined'} label=\"Subsidiary\" />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <Autocomplete\r\n                      fullWidth\r\n                      options={departments.filter(department => department.companyId == complianceDetails.companyId)}\r\n                      value={departments.find(department => department.id === complianceDetails.departmentsId) ?? initValue}\r\n                      getOptionLabel={option => option.name}\r\n                      onChange={handleOnDepartmentChange}\r\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          helperText={complianceDetails.companyId === null ? 'Select Subsidiary' : ''}\r\n                          fullWidth\r\n                          {...params}\r\n                          size={'small'}\r\n                          variant={'outlined'}\r\n                          label=\"Department\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <Autocomplete\r\n                      fullWidth\r\n                      options={sections.filter(section => section.departmentsId == complianceDetails.departmentsId)}\r\n                      value={sections.find(section => section.id === complianceDetails.sectionsId) ?? initValue}\r\n                      getOptionLabel={option => option.name}\r\n                      onChange={handleOnSectionChange}\r\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          helperText={complianceDetails.departmentsId === null ? 'Select Department' : ''}\r\n                          fullWidth\r\n                          {...params}\r\n                          size={'small'}\r\n                          variant={'outlined'}\r\n                          label=\"Section\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <Autocomplete\r\n                      fullWidth\r\n                      options={subSections.filter(subSection => subSection.sectionsId == complianceDetails.sectionsId)}\r\n                      value={subSections.find(subSection => subSection.id === complianceDetails.sectionsId) ?? initValue}\r\n                      getOptionLabel={option => option.name}\r\n                      onChange={handleOnSubSectionChange}\r\n                      renderOption={(option, { selected }) => <span key={option.id}>{option.name}</span>}\r\n                      renderInput={params => (\r\n                        <TextField\r\n                          helperText={complianceDetails.sectionsId === null ? 'Select Section' : ''}\r\n                          fullWidth\r\n                          {...params}\r\n                          size={'small'}\r\n                          variant={'outlined'}\r\n                          label=\"Sub-Section\"\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Fees\"\r\n                      type={'number'}\r\n                      variant=\"outlined\"\r\n                      value={complianceDetails.fees}\r\n                      onChange={e => {\r\n                        setComplianceDetails({ ...complianceDetails, fees: e.target.value });\r\n                      }}\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <TextField\r\n                              select\r\n                              style={{ width: '90px' }}\r\n                              label=\"\"\r\n                              value={complianceDetails.penaltyCurrency}\r\n                              onChange={e => setComplianceDetails({ ...complianceDetails, penaltyCurrency: e.target.value })}\r\n                              InputProps={{\r\n                                disableUnderline: true,\r\n                              }}>\r\n                              {currencies.map(option => (\r\n                                <MenuItem key={option.id} value={option.name}>\r\n                                  {option.name}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Fines\"\r\n                      type={'number'}\r\n                      variant=\"outlined\"\r\n                      value={complianceDetails.fine}\r\n                      onChange={e => {\r\n                        setComplianceDetails({ ...complianceDetails, fine: e.target.value });\r\n                      }}\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <TextField\r\n                              select\r\n                              style={{ width: '90px' }}\r\n                              label=\"\"\r\n                              value={complianceDetails.penaltyCurrency}\r\n                              onChange={e => setComplianceDetails({ ...complianceDetails, penaltyCurrency: e.target.value })}\r\n                              InputProps={{\r\n                                disableUnderline: true,\r\n                              }}>\r\n                              {currencies.map(option => (\r\n                                <MenuItem key={option} value={option.name}>\r\n                                  {option.name}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <TextField\r\n                      fullWidth\r\n                      label=\"Total Fees & Fines\"\r\n                      type={'number'}\r\n                      variant=\"outlined\"\r\n                      value={complianceDetails.totalFees}\r\n                      onChange={e => {\r\n                        setComplianceDetails({ ...complianceDetails, totalFees: e.target.value });\r\n                      }}\r\n                      disabled\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <TextField\r\n                              select\r\n                              disabled\r\n                              style={{ width: '90px' }}\r\n                              label=\"\"\r\n                              value={complianceDetails.penaltyCurrency}\r\n                              onChange={e => setComplianceDetails({ ...complianceDetails, penaltyCurrency: e.target.value })}\r\n                              InputProps={{\r\n                                disableUnderline: true,\r\n                              }}>\r\n                              {currencies.map(option => (\r\n                                <MenuItem key={option} value={option.name}>\r\n                                  {option.name}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <DatePicker\r\n                      autoOk\r\n                      fullWidth\r\n                      clearable\r\n                      inputVariant={'outlined'}\r\n                      label=\"Date of Next Hearing\"\r\n                      onChange={date => {\r\n                        setSelectedDeadline(date);\r\n                      }}\r\n                      value={\r\n                        complianceDetails.dateofNextHearing !== '' ? complianceDetails.dateofNextHearing : selectedDeadline\r\n                      }\r\n                      format=\"DD-MM-yyyy\"\r\n                      animateYearScrolling\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                    <AppTextInput\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      label=\"Management Comments\"\r\n                      multiline\r\n                      minRows={5}\r\n                      value={complianceDetails.managementComments}\r\n                      onChange={e => setComplianceDetails({ ...complianceDetails, managementComments: e.target.value })}\r\n                    />\r\n                  </Grid>\r\n                </GridContainer>\r\n              </Box>\r\n            )}\r\n            {activeStep === 1 && (\r\n              <Box width={'100%'}>\r\n                <Preview {...{ complianceDetails }} />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box display=\"flex\" m={3} pb={3}>\r\n            {activeStep === steps.length - 1 && (\r\n              <Button onClick={handlePrev} variant={'contained'} color={'primary'} size={'small'}>\r\n                Prev\r\n              </Button>\r\n            )}\r\n            <Box flex={'1 0 auto'} />\r\n            {activeStep !== steps.length - 1 && (\r\n              <Button onClick={handleNext} variant={'contained'} color={'primary'} size={'small'}>\r\n                Continue\r\n              </Button>\r\n            )}\r\n            {activeStep === steps.length - 1 && (\r\n              <Button onClick={handleOnSave} variant={'contained'} color={'primary'} size={'small'}>\r\n                Save\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </PerfectScrollbar>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nexport const Preview = props => {\r\n  const { complianceDetails, isView } = props;\r\n  const renderHTML = rawHTML => React.createElement('div', { dangerouslySetInnerHTML: { __html: rawHTML } });\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer className={classes.inBuildAppCard}>\r\n      <Table size=\"small\" aria-label=\"a dense table\">\r\n        {!isView && (\r\n          <TableHead className={classes.tableHeader}>\r\n            <TableRow>\r\n              <TableCell className={classes.tableHeaderCell}>Field Name</TableCell>\r\n              <TableCell className={classes.tableHeaderCell}>Input Value</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n        )}\r\n        <TableBody>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Case Title</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.title !== '' ? complianceDetails.title : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Case Details</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.details !== '' ? renderHTML(complianceDetails.details) : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Case Type</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.caseType !== '' ? complianceDetails.caseType : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Judgement</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.judgement !== '' ? complianceDetails.judgement : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Company</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.companyName !== '' ? complianceDetails.companyName : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Department</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.departmentsName !== '' ? complianceDetails.departmentsName : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Section</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.sectionsName !== '' ? complianceDetails.sectionsName : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Sub Section</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.subSectionsName !== '' ? complianceDetails.subSectionsName : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Fees in {complianceDetails.penaltyCurrency}</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.fees !== '' ? complianceDetails.fees : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Fines in {complianceDetails.penaltyCurrency}</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.fine !== '' ? complianceDetails.fine : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Total Fees & Fines in {complianceDetails.penaltyCurrency}</b>\r\n            </TableCell>\r\n            <TableCell>{complianceDetails.totalFees !== '' ? complianceDetails.totalFees : 'Not Set'}</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Date of Next Hearing</b>\r\n            </TableCell>\r\n            <TableCell>\r\n              {complianceDetails.dateofNextHearing !== '' ? complianceDetails.dateofNextHearing : 'Not Set'}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Management Comments</b>\r\n            </TableCell>\r\n            <TableCell>\r\n              {complianceDetails.managementComments !== '' ? complianceDetails.managementComments : 'Not Set'}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>\r\n              <b>Case File Attachment</b>\r\n            </TableCell>\r\n            <TableCell>\r\n              {complianceDetails.caseFileAttachment !== '' ? complianceDetails.caseFileAttachment : 'Not Uploaded'}\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\nconst SuccessPage = props => {\r\n  const { classes, handleReset, isUpdate } = props;\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      <CmtImage src={'/images/ic_ok.svg'} style={{ width: '50px' }} />\r\n      <p className={classes.instructions} style={{ marginTop: '10px' }}>\r\n        <b>Compliance was {isUpdate ? 'updated' : 'created'} successfully!</b>\r\n      </p>\r\n      <Box mt={10}>\r\n        <Link to={'/compliance/legal-compliance'}>\r\n          <Button color={'primary'} variant={'contained'}>\r\n            Back to Compliance Dashboard\r\n          </Button>\r\n        </Link>\r\n        {!isUpdate && (\r\n          <Button onClick={handleReset} className={classes.button}>\r\n            Create New Compliance\r\n          </Button>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AddEditLegalCompliance;\r\n"],"sourceRoot":""}