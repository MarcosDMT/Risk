{"version":3,"sources":["routes/Pages/ComplianceModule/EnterpriseCompliance/ImportBulkCompliance/index.js","routes/Pages/ComplianceModule/EnterpriseCompliance/index.js"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","DownloadPage","Box","display","justifyContent","alignItems","flexDirection","CmtImage","src","style","width","marginTop","Button","variant","color","UploadPage","setFile","mt","useChipsForPreview","showPreviewsInDropzone","showPreviews","filesLimit","onChange","files","length","handleOnFileChange","acceptedFiles","ValidationPage","complianceList","id","columnAutoWidth","dataSource","showColumnLines","showRowLines","showBorders","repaintChangesOnly","allowColumnResizing","rowAlternationEnabled","visible","mode","allowUpdating","allowDeleting","allowAdding","allowSearch","dataField","key","caption","allowFiltering","cellRender","rowIndex","minWidth","allowHeaderFiltering","encodeHtml","subsidiariesList","displayExpr","valueExpr","departmentList","sectionsList","subSectionList","rowRenderingMode","defaultPageSize","displayMode","showPageSizeSelector","showInfo","showNavigationButtons","ImportEnterpriseCompliance","openDialog","onCloseDialog","setActiveStep","activeStep","file","breadCrumbsTitle","classes","makeStyles","theme","backButton","marginRight","spacing","instructions","marginBottom","dialogRoot","position","dialogHeader","backgroundColor","palette","primary","main","dialogTitleRoot","fontSize","common","white","scrollbar","height","useStyles","steps","Dialog","open","onClose","scroll","fullScreen","TransitionComponent","className","AppBar","Toolbar","IconButton","edge","onClick","aria-label","DialogTitle","DialogContent","sx","Stepper","alternativeLabel","map","label","Step","StepLabel","disabled","prevActiveStep","flex","breadcrumbs","HEADER","DASHBOARD","link","ENTERPRISE_COMPLIANCE","name","active","value","EnterpriseCompliance","useState","tabStep","setTabStep","dispatch","useDispatch","useSelector","compliance","mainEnterpriseComplianceData","subEnterpriseComplianceData","selectedEnterprise","approvedEnterpriseCompliance","compliedEnterpriseCompliance","setOpenDialog","openDrawer","setOpenDrawer","complianceDetails","setComplianceDetails","history","useHistory","onViewCompliance","data","onUpdateCompliance","push","pathname","state","onDeleteCompliance","a","deleteEnterpriseCompliance","fetchEnterpriseCompliance","handleOnStepChange","e","useEffect","type","COMPLIANCE","ENTERPRISE","GET_SELECTED","payload","fetchEnterpriseComplianceSub","initializeComplianceData","fetchEnterpriseComplianceMain","fetchEnterpriseComplianceComplied","fetchEnterpriseComplianceApproved","Fragment","PageContainer","heading","inBuildAppCard","p","Typography","MainComplianceSection","pl","filter","enterpriseData","approvalStatus","obligationStatus","Tabs","visibleScrollbar","TabIndicatorProps","border","step","index","Tab","a11yProps","to","title","Add","FileUpload","EnterpriseComplianceTable","viewComplianceRecords","ViewCompliance","onCloseDrawer"],"mappings":"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","file":"static/js/11.e8cae795.chunk.js","sourcesContent":["import React from 'react';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  Toolbar,\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { DropzoneArea } from '@pandemicode/material-ui-dropzone';\r\nimport { DataGrid } from 'devextreme-react';\r\nimport {\r\n  Column,\r\n  Editing,\r\n  EmailRule,\r\n  FilterPanel,\r\n  FilterRow,\r\n  HeaderFilter,\r\n  Lookup,\r\n  Pager,\r\n  Paging,\r\n  RequiredRule,\r\n  Scrolling,\r\n  SearchPanel,\r\n} from 'devextreme-react/data-grid';\r\nimport { departmentList, sectionsList, subSectionList, subsidiariesList } from '../../../Organization/dummyData';\r\n\r\nconst Transition = React.forwardRef((props, ref) => {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction getSteps() {\r\n  return ['Download Template', 'Upload File', 'Validation & Confirmation'];\r\n}\r\n\r\nconst ImportEnterpriseCompliance = props => {\r\n  const {\r\n    openDialog,\r\n    onCloseDialog,\r\n    setActiveStep,\r\n    activeStep,\r\n    file,\r\n    setFile,\r\n    complianceList,\r\n    breadCrumbsTitle,\r\n  } = props;\r\n  const useStyles = makeStyles(theme => ({\r\n    backButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(2),\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    dialogRoot: {\r\n      position: 'relative',\r\n    },\r\n    dialogHeader: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      position: 'relative',\r\n    },\r\n    dialogTitleRoot: {\r\n      '& .MuiTypography-h6': {\r\n        fontSize: 16,\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n    scrollbar: {\r\n      height: props => `calc(100vh - ${props.height}px)`,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={openDialog}\r\n      onClose={onCloseDialog}\r\n      //maxWidth={'xl'}\r\n      scroll={'paper'}\r\n      //fullWidth={true}\r\n      fullScreen={true}\r\n      TransitionComponent={Transition}\r\n      className={classes.dialogRoot}>\r\n      <AppBar className={classes.dialogHeader}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" onClick={onCloseDialog} aria-label=\"close\">\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <DialogTitle className={classes.dialogTitleRoot}>{breadCrumbsTitle} Bulk Import</DialogTitle>\r\n          {/*<Button autoFocus color=\"inherit\" onClick={handleClose}>*/}\r\n          {/*  save*/}\r\n          {/*</Button>*/}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <PerfectScrollbar className={classes.scrollbar}>\r\n        <DialogContent style={{ marginTop: 10 }}>\r\n          <Box sx={{ width: '100%' }}>\r\n            <Box>\r\n              <Stepper activeStep={activeStep} alternativeLabel>\r\n                {steps.map(label => (\r\n                  <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                  </Step>\r\n                ))}\r\n              </Stepper>\r\n              <Box>\r\n                {activeStep === steps.length ? (\r\n                  <Box width={'100%'} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n                    <CmtImage src={'/images/ic_ok.svg'} style={{ width: '100px' }} />\r\n                    <p style={{ marginTop: 10 }}>\r\n                      <b>New Records created successfully!</b>\r\n                    </p>\r\n                    <Box mt={10}>\r\n                      <Button onClick={onCloseDialog} variant={'outlined'} color={'primary'}>\r\n                        Finish\r\n                      </Button>\r\n                    </Box>\r\n                  </Box>\r\n                ) : (\r\n                  <>\r\n                    <Box>\r\n                      {activeStep === 0 && (\r\n                        <>\r\n                          <DownloadPage />\r\n                        </>\r\n                      )}\r\n                      {activeStep === 1 && (\r\n                        <>\r\n                          <UploadPage {...{ file, setFile }} />\r\n                        </>\r\n                      )}\r\n                      {activeStep === 2 && (\r\n                        <>\r\n                          <ValidationPage {...{ complianceList }} />\r\n                        </>\r\n                      )}\r\n                    </Box>\r\n                    <Box mt={20} display={'flex'}>\r\n                      <Button disabled={activeStep === 0} onClick={handleBack} className={classes.backButton}>\r\n                        Back\r\n                      </Button>\r\n                      <Box flex={'1 0 auto'} />\r\n                      <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                      </Button>\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n      </PerfectScrollbar>\r\n    </Dialog>\r\n  );\r\n};\r\nconst DownloadPage = props => {\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      <CmtImage src={'/images/ic_download.ico'} style={{ width: '100px' }} />\r\n      <p style={{ marginTop: '10px' }}>\r\n        <b>Download the excel file below!</b>\r\n      </p>\r\n      <Button style={{ marginTop: '20px' }} variant={'outlined'} color={'primary'}>\r\n        Download Here\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\nconst UploadPage = props => {\r\n  const { setFile } = props;\r\n  const handleOnFileChange = files => {\r\n    if (files.length === 1) {\r\n      setFile(files[0]);\r\n    } else {\r\n      setFile('');\r\n    }\r\n  };\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      {/*<CmtImage src={'/images/ic_upload.png'} style={{ width: '50px' }} />*/}\r\n      {/*<p style={{ marginTop: '10px' }}>*/}\r\n      {/*  <b>Upload your file below</b>*/}\r\n      {/*</p>*/}\r\n      <Box width={'50%'} mt={2}>\r\n        <DropzoneArea\r\n          useChipsForPreview={true}\r\n          showPreviewsInDropzone={false}\r\n          showPreviews={true}\r\n          filesLimit={1}\r\n          onChange={files => handleOnFileChange(files)}\r\n          acceptedFiles={['.csv', '.xlsx', '.xls']}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\nconst ValidationPage = props => {\r\n  const { complianceList } = props;\r\n  function actionNumber({ rowIndex }) {\r\n    return rowIndex + 1;\r\n  }\r\n  const multipleValues = ({ displayValue }) => {\r\n    return displayValue.map((value, index) => <li key={index}>{value}</li>);\r\n  };\r\n  return (\r\n    <>\r\n      <DataGrid\r\n        id=\"uploadedCompliance\"\r\n        columnAutoWidth={true}\r\n        dataSource={complianceList}\r\n        showColumnLines={true}\r\n        showRowLines={true}\r\n        showBorders={true}\r\n        repaintChangesOnly={true}\r\n        allowColumnResizing={true}\r\n        rowAlternationEnabled={true}>\r\n        <FilterRow visible={true} />\r\n        <FilterPanel visible={true} />\r\n        <SearchPanel visible={true} />\r\n        <Editing mode=\"cell\" allowUpdating={true} allowDeleting={true} allowAdding={true} />\r\n        <HeaderFilter visible={true} allowSearch={true} />\r\n        <Column dataField=\"id\" key=\"id\" visible={false} />\r\n        <Column caption=\"#\" width={50} allowFiltering={false} cellRender={actionNumber} />\r\n        <Column\r\n          dataField=\"complianceTitle\"\r\n          minWidth={100}\r\n          caption=\"Title\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"complianceDesc\"\r\n          minWidth={100}\r\n          caption=\"Description\"\r\n          encodeHtml={false}\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"authority\"\r\n          minWidth={100}\r\n          caption=\"Authority\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"subsidiary\"\r\n          minWidth={100}\r\n          caption=\"Subsidiary\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}>\r\n          <Lookup dataSource={subsidiariesList} displayExpr=\"subsidiaryName\" valueExpr=\"subsidiaryName\" />\r\n        </Column>\r\n        <Column\r\n          dataField=\"department\"\r\n          minWidth={100}\r\n          caption=\"Department\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}>\r\n          <Lookup dataSource={departmentList} displayExpr=\"deptName\" valueExpr=\"deptName\" />\r\n        </Column>\r\n        <Column\r\n          dataField=\"section\"\r\n          minWidth={100}\r\n          caption=\"Section\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}>\r\n          <Lookup dataSource={sectionsList} displayExpr=\"sectionName\" valueExpr=\"sectionName\" />\r\n        </Column>\r\n        <Column\r\n          dataField=\"subSection\"\r\n          minWidth={100}\r\n          caption=\"Sub-Section\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}>\r\n          <Lookup dataSource={subSectionList} displayExpr=\"subSectionName\" valueExpr=\"subSectionName\" />\r\n        </Column>\r\n        <Column\r\n          dataField=\"penalty\"\r\n          minWidth={100}\r\n          caption=\"Penalty\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          // cellRender={multipleValues}\r\n          allowFiltering={false}\r\n        />\r\n        <Column dataField=\"primaryOwner\" minWidth={100} caption=\"Primary Owner\" />\r\n        <Column\r\n          dataField=\"secondaryOwner\"\r\n          minWidth={100}\r\n          caption=\"Secondary Owner\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"escalationPerson\"\r\n          minWidth={100}\r\n          caption=\"Escalation Person\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"priority\"\r\n          minWidth={100}\r\n          caption=\"Priority\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"frequency\"\r\n          minWidth={100}\r\n          caption=\"Frequency\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"submissionDeadline\"\r\n          minWidth={100}\r\n          caption=\"Submission Deadline\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"complianceType\"\r\n          minWidth={100}\r\n          caption=\"Compliance Type\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"sourceDoc\"\r\n          minWidth={100}\r\n          caption=\"Source Document\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n\r\n        <Scrolling rowRenderingMode=\"virtual\" />\r\n        <Paging defaultPageSize={20} />\r\n        <Pager\r\n          visible={true}\r\n          // allowedPageSizes={allowedPageSizes}\r\n          displayMode={true}\r\n          showPageSizeSelector={false}\r\n          showInfo={true}\r\n          showNavigationButtons={true}\r\n        />\r\n      </DataGrid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImportEnterpriseCompliance;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PageContainer from '../../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { HEADER } from '../../../../@jumbo/constants/HeaderMessages';\r\nimport { Box } from '@material-ui/core';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport useStyles from '../../Roles/index.style';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ViewCompliance from './ViewCompliance';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  deleteEnterpriseCompliance,\r\n  fetchEnterpriseCompliance,\r\n  fetchEnterpriseComplianceApproved,\r\n  fetchEnterpriseComplianceComplied,\r\n  fetchEnterpriseComplianceMain,\r\n  fetchEnterpriseComplianceSub,\r\n} from '../../../../redux/actions/Compliance';\r\nimport ImportEnterpriseCompliance from './ImportBulkCompliance';\r\nimport EnterpriseComplianceTable from './EnterpriseComplianceTable';\r\nimport MainComplianceSection from './MainComplianceSection';\r\nimport { IconButton, Tab, Tabs, Typography } from '@mui/material';\r\nimport { Add, FileUpload } from '@mui/icons-material';\r\nimport { COMPLIANCE } from '../../../../@jumbo/constants/ActionTypes';\r\n\r\nconst breadcrumbs = [\r\n  { label: HEADER.DASHBOARD, link: '/' },\r\n  { label: HEADER.ENTERPRISE_COMPLIANCE.name, active: false },\r\n];\r\n\r\nconst steps = [\r\n  {\r\n    label: 'All',\r\n    value: 'all',\r\n  },\r\n  {\r\n    label: 'Approved',\r\n    value: 'approved',\r\n  },\r\n  {\r\n    label: 'Waiting Approval',\r\n    value: 'pending',\r\n  },\r\n  {\r\n    label: 'Compliant',\r\n    value: 'compliant',\r\n  },\r\n  {\r\n    label: 'Non Compliant',\r\n    value: 'non_compliant',\r\n  },\r\n];\r\n\r\nconst filterEnterpriseData = (data, filter) =>\r\n  data.filter(compliance => {\r\n    if (filter === 0) {\r\n      return true;\r\n    }\r\n    if (filter === 1) {\r\n      return compliance.approvalStatus === 'Approved';\r\n    }\r\n    if (filter === 2) {\r\n      return compliance.approvalStatus === 'Pending Approval';\r\n    }\r\n    if (filter === 3) {\r\n      return compliance.obligationStatus === 1 || compliance.obligationStatus === 3;\r\n    }\r\n    if (filter === 4) {\r\n      return compliance.obligationStatus === 0 || compliance.obligationStatus === 2;\r\n    }\r\n    return false;\r\n  });\r\nconst filterEnterpriseWithId = (data, id) =>\r\n  data.filter(compliance => {\r\n    if (id && compliance.mainId === id) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n\r\nconst EnterpriseCompliance = () => {\r\n  const [tabStep, setTabStep] = useState(0);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [file, setFile] = useState('');\r\n  const dispatch = useDispatch();\r\n  const {\r\n    mainEnterpriseComplianceData,\r\n    subEnterpriseComplianceData,\r\n    approvedEnterpriseCompliance,\r\n    selectedEnterprise,\r\n    compliedEnterpriseCompliance,\r\n  } = useSelector(({ compliance }) => compliance);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [openDrawer, setOpenDrawer] = useState(false);\r\n  const [complianceDetails, setComplianceDetails] = useState({});\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const onCloseDrawer = () => {\r\n    setOpenDrawer(false);\r\n  };\r\n  const onCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setActiveStep(0);\r\n  };\r\n  const onViewCompliance = data => {\r\n    setComplianceDetails(data);\r\n    setOpenDrawer(true);\r\n  };\r\n  const onUpdateCompliance = data => {\r\n    history.push({ pathname: `enterprise-compliance/update`, state: data });\r\n  };\r\n  const onDeleteCompliance = async data => {\r\n    await dispatch(deleteEnterpriseCompliance(data));\r\n    await dispatch(fetchEnterpriseCompliance());\r\n  };\r\n\r\n  const handleOnStepChange = (e, value) => {\r\n    setTabStep(value);\r\n  };\r\n  const viewComplianceRecords = () => {\r\n    let enterpriseData = filterEnterpriseData(subEnterpriseComplianceData, tabStep);\r\n    // if (tabStep === 2){\r\n    //   enterpriseData = filterEnterpriseWithId(approvedEnterpriseCompliance, selectedEnterprise)\r\n    // }\r\n    // if (tabStep === 4){\r\n    //   enterpriseData = filterEnterpriseWithId(compliedEnterpriseCompliance, selectedEnterprise)\r\n    // }\r\n\r\n    return (\r\n      <>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <Tabs\r\n            visibleScrollbar={true}\r\n            TabIndicatorProps={{\r\n              border: 'none',\r\n            }}\r\n            value={tabStep}\r\n            onChange={handleOnStepChange}\r\n            aria-label=\"enterprise-compliance-tabs\">\r\n            {steps.map((step, index) => (\r\n              <Tab key={index} label={step.label} {...a11yProps(index)} />\r\n            ))}\r\n          </Tabs>\r\n          <Box width={'100px'}>\r\n            <Link to={`enterprise-compliance/create`}>\r\n              <IconButton title={'Add Compliance'} color={'primary'}>\r\n                <Add />\r\n              </IconButton>\r\n            </Link>\r\n            <IconButton onClick={() => setOpenDialog(true)} title={'Bulk Upload'} color={'primary'}>\r\n              <FileUpload />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n\r\n        <EnterpriseComplianceTable\r\n          {...{\r\n            breadCrumbsTitle: HEADER.ENTERPRISE_COMPLIANCE.name,\r\n            complianceList: enterpriseData,\r\n            classes,\r\n            setOpenDialog,\r\n            step: tabStep,\r\n            onViewCompliance,\r\n            onUpdateCompliance,\r\n            onDeleteCompliance,\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const initializeComplianceData = () => {\r\n    if (mainEnterpriseComplianceData.length > 0 && !selectedEnterprise) {\r\n      dispatch({\r\n        type: COMPLIANCE.ENTERPRISE.GET_SELECTED,\r\n        payload: mainEnterpriseComplianceData[0]?.id,\r\n      });\r\n      dispatch(fetchEnterpriseComplianceSub(mainEnterpriseComplianceData[0]));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initializeComplianceData();\r\n  }, [mainEnterpriseComplianceData]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEnterpriseComplianceMain());\r\n    dispatch(fetchEnterpriseComplianceComplied());\r\n    dispatch(fetchEnterpriseComplianceApproved());\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <PageContainer heading={HEADER.ENTERPRISE_COMPLIANCE.name} breadcrumbs={breadcrumbs}>\r\n        <Box\r\n          className={classes.inBuildAppCard}\r\n          sx={{\r\n            flexDirection: 'row',\r\n            display: 'flex',\r\n            p: 5,\r\n          }}>\r\n          <Box\r\n            sx={{\r\n              flex: 1,\r\n              width: '100%',\r\n              minWidth: '250px',\r\n            }}>\r\n            <Typography variant={'h6'}>{'Main Compliance'}</Typography>\r\n            <MainComplianceSection {...{ complianceList: mainEnterpriseComplianceData }} />\r\n          </Box>\r\n          <Box sx={{ flex: 2, pl: 2, width: '100%', minWidth: 'calc(100% - 250px)' }}>{viewComplianceRecords()}</Box>\r\n        </Box>\r\n      </PageContainer>\r\n      <ImportEnterpriseCompliance\r\n        {...{\r\n          breadCrumbsTitle: HEADER.ENTERPRISE_COMPLIANCE.name,\r\n          openDialog,\r\n          onCloseDialog,\r\n          activeStep,\r\n          setActiveStep,\r\n          file,\r\n          setFile,\r\n        }}\r\n      />\r\n      <ViewCompliance {...{ complianceDetails, openDrawer, onCloseDrawer }} />\r\n      <NotificationContainer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default EnterpriseCompliance;\r\n"],"sourceRoot":""}