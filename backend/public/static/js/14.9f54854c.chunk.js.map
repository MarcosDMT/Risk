{"version":3,"sources":["routes/Pages/Dashboard/GeneralDashboard/RisksGraphs/RisksTreeMap.js","routes/Pages/Dashboard/GeneralDashboard/RisksTables/index.js","routes/Pages/Dashboard/GeneralDashboard/RisksGraphs/ControlsChart.js","routes/Pages/Dashboard/GeneralDashboard/RisksGraphs/LossTypeChat.js","routes/Pages/Dashboard/GeneralDashboard/RisksGraphs/index.js","routes/Pages/Dashboard/GeneralDashboard/index.js"],"names":["useStyles","makeStyles","theme","cardContentRoot","position","titleRoot","letterSpacing","marginBottom","listItemRoot","padding","fontSize","color","palette","text","secondary","subTitleRoot","lossCategoryRoot","primary","fill","countryCellItem","cursor","transition","borderRadius","backgroundColor","alpha","common","dark","transform","boxShadow","RisksTreeMapKey","data","department","rest","classes","Grid","container","spacing","length","map","item","index","xs","md","key","Box","display","alignItems","justifyContent","className","clsx","active","name","component","ml","height","width","bgcolor","COLORS","px","slug","mx","risks","RisksTreeMapChat","props","useTheme","handleOnMapClick","CustomizedContent","root","depth","x","y","colors","style","stroke","strokeWidth","strokeOpacity","textAnchor","fontFamily","typography","fontWeight","fontWeightLight","white","margin","top","right","left","bottom","dataKey","ratio","onClick","onClickTreeMap","content","isAnimationActive","payload","label","Paper","Typography","variant","value","id","x1","y1","x2","y2","gradientTransform","offset","stopColor","stopOpacity","gradientColor","GRADIENT_COLORS","find","element","undefined","getGradientColor","RisksTreeMap","currentFilter","setCurrentFilter","filters","setDepartment","setOpenDialog","useState","action","level","breadcrumbsList","setBreadcrumbsList","handleFilterChange","e","target","resetBreadcrumbs","onClickBreadcrumbs","list","splice","CmtAdvCard","CmtCardHeader","title","subTitle","mr","Select","selectBoxRoot","labelId","onChange","MenuItem","CmtAdvCardContent","mb","Breadcrumbs","aria-label","separator","underline","Link","href","preventDefault","GridContainer","push","gutterBottom","RisksTableView","multipleValues","displayValue","columnAutoWidth","dataSource","showColumnLines","showRowLines","showBorders","allowColumnResizing","rowAlternationEnabled","visible","enabled","type","storageKey","mode","allowSearch","dataField","caption","allowHeaderFiltering","allowFiltering","minWidth","allowHiding","cellRender","Chip","borderColor","size","rowRenderingMode","defaultPageSize","displayMode","showPageSizeSelector","showInfo","showNavigationButtons","require","Highcharts","ControlMapKey","ControlBubbleChart","chartOptions","chart","styleMode","exporting","credits","tooltip","useHTML","pointFormat","plotOptions","packedbubble","minSize","maxSize","layoutAlgorithm","gravitationalConstant","splitSeries","seriesInteraction","dragBetweenSeries","parentNodeLimit","dataLabels","format","filter","property","operator","textOutline","series","highcharts","options","ControlsChart","Filter","CmtCardContent","backdropContent","AppSelectBox","valueKey","labelKey","event","FilterHeader","sm","headerItem","LossTypeStackChart","stackId","verticalAlign","LossTypeChat","revealed","setRevealed","CmtBackDrop","concealedIcon","CmtImage","src","alt","backLayerConcealed","backLayerRevealed","onRevealed","p","lg","xl","pl","paddingLeft","paddingRight","breakpoints","down","borderLeft","marginRight","borderBottomColor","dialogRoot","dialogHeader","main","dialogTitleRoot","filterOptions","Transition","React","forwardRef","ref","Zoom","unmountOnExit","ShowRisksTable","onCloseDialog","openDialog","Dialog","open","fullWidth","maxWidth","onClose","scroll","TransitionComponent","DialogTitle","DialogContent","marginTop","sx","Button","RisksGraphs","setData","probabilityData","setProbabiltyData","lossTypeData","setLossTypeData","controlTypeData","setControlTypeData","setRisks","useEffect","risksList","riskTreeDataSections","riskTreeDataDepartments","lossTypeRisksDeptProgress","riskProbabilityData","riskControlTypeData","riskTreeDataControlCat","lossTypeRisksCatProgress","riskProbabilityDataCat","riskControlTypeDataCat","Fragment","LossTypeProbabilityChart","breadcrumbs","HEADER","DASHBOARD","link","GENERAL_DASHBOARD","isActive","GeneralDashboard","PageContainer","heading","DashboardHeader","mt"],"mappings":"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","file":"static/js/14.9f54854c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { ResponsiveContainer, Tooltip, Treemap } from 'recharts';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport CmtBackDrop from '../../../../../@coremat/CmtBackDrop';\r\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\r\nimport { Box, IconButton, Link, MenuItem, Paper, Select, Typography, useTheme } from '@material-ui/core';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport { ArrowBackIos, Visibility } from '@material-ui/icons';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtAdvCardContent from '../../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CmtAdvCard from '../../../../../@coremat/CmtAdvCard';\r\nimport { Breadcrumbs } from '@mui/material';\r\nimport { COLORS, GRADIENT_COLORS } from '../../dummyData';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardContentRoot: {\r\n    position: 'relative',\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.5,\r\n    marginBottom: 20,\r\n  },\r\n  listItemRoot: {\r\n    padding: 0,\r\n    '& .root': {\r\n      marginBottom: 1,\r\n    },\r\n    '& .Cmt-label-container': {\r\n      fontSize: 12,\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  lossCategoryRoot: {\r\n    color: theme.palette.text.primary,\r\n    '& text': {\r\n      fill: theme.palette.text.primary,\r\n    },\r\n  },\r\n  countryCellItem: {\r\n    cursor: 'pointer',\r\n    padding: 10,\r\n    fontSize: 12,\r\n    transition: 'all .2s',\r\n    borderRadius: 4,\r\n    '&:hover, &.active': {\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.04),\r\n      '& .text-hover': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n    },\r\n    '&:hover': {\r\n      transform: 'translateY(-4px)',\r\n      boxShadow: `0 3px 10px 0 ${alpha(theme.palette.common.dark, 0.2)}`,\r\n    },\r\n  },\r\n}));\r\nconst Filter = props => {\r\n  const { currentFilter, setCurrentFilter, classes, filters } = props;\r\n  const handleChange = event => {\r\n    setCurrentFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <CmtCardContent>\r\n      <Box className={classes.backdropContent}>\r\n        <AppSelectBox\r\n          label=\"Filter with\"\r\n          data={filters}\r\n          valueKey=\"label\"\r\n          labelKey=\"label\"\r\n          value={currentFilter}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n    </CmtCardContent>\r\n  );\r\n};\r\nconst FilterHeader = ({ currentFilter, classes }) => {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" mx={{ xs: -2, sm: -4 }}>\r\n      <Box className={classes.headerItem}>\r\n        {/*<DashboardIcon />*/}\r\n        {currentFilter}\r\n      </Box>\r\n      {/*<Box className={classes.headerItem}>*/}\r\n      {/*  <CalendarTodayIcon />*/}\r\n      {/*  {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}*/}\r\n      {/*</Box>*/}\r\n    </Box>\r\n  );\r\n};\r\nconst OldRisksTreeMap = props => {\r\n  const { data, currentFilter, setCurrentFilter, classes, filters, department, setDepartment, setOpenDialog } = props;\r\n  const [revealed, setRevealed] = useState(false);\r\n  const handleOnRevealed = () => {\r\n    setRevealed(!revealed);\r\n  };\r\n\r\n  return (\r\n    <CmtBackDrop\r\n      concealedIcon={<CmtImage src={'/images/icons/filter_icon.png'} alt=\"filter\" />}\r\n      backLayerConcealed={revealed ? '' : <FilterHeader {...{ currentFilter, classes }} />}\r\n      backLayerRevealed={<Filter {...{ currentFilter, setCurrentFilter, classes, filters }} />}\r\n      onRevealed={handleOnRevealed}>\r\n      <Box display=\"flex\" alignItems=\"center\" p={{ xs: 4, lg: 6, xl: 8 }}>\r\n        <Box>\r\n          <Box pl={{ xs: 4, lg: 6, xl: 8 }}>\r\n            <Box display=\"flex\" alignItems=\"center\" alignContent={'center'}>\r\n              {department.name !== '' && (\r\n                <IconButton onClick={e => setDepartment({ id: '', name: '' })}>\r\n                  <ArrowBackIos fontSize={'small'} />\r\n                </IconButton>\r\n              )}\r\n              <Typography component=\"div\" variant=\"h4\">\r\n                Number of Risks by {currentFilter} {department.name !== '' && `- ${department.name}`}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box padding={2}>\r\n        <RisksTreeMapChat {...{ data, department, setDepartment, currentFilter, filters, setOpenDialog }} />\r\n      </Box>\r\n    </CmtBackDrop>\r\n  );\r\n};\r\nconst RisksTreeMap = props => {\r\n  const { data, currentFilter, setCurrentFilter, classes, filters, department, setDepartment, setOpenDialog } = props;\r\n  const [breadcrumbsList, setBreadcrumbsList] = useState([{ name: currentFilter, action: '', level: 0 }]);\r\n  const handleFilterChange = e => {\r\n    setCurrentFilter(e.target.value);\r\n    resetBreadcrumbs(e.target.value);\r\n  };\r\n  const handleOnMapClick = data => {\r\n    if (department.id === '' && currentFilter === filters[0].label) {\r\n      setDepartment({ id: data.id, name: data.name });\r\n      if (breadcrumbsList.length < 2) {\r\n        const list = [...breadcrumbsList];\r\n        list.push({ name: data.name, level: breadcrumbsList.length + 1, action: '' });\r\n        setBreadcrumbsList(list);\r\n      }\r\n    } else {\r\n      setOpenDialog(true);\r\n    }\r\n  };\r\n  const resetBreadcrumbs = name => {\r\n    onClickBreadcrumbs(0, name);\r\n  };\r\n  const onClickBreadcrumbs = (index, name) => {\r\n    const list = [...breadcrumbsList];\r\n    list.splice(index + 1, list.length);\r\n    list[0].name = name;\r\n    setBreadcrumbsList(list);\r\n    setDepartment({ id: '', name: '' });\r\n  };\r\n  const getBreadcrumbs = () => {\r\n    return (\r\n      <>\r\n        <Breadcrumbs aria-label={'breadcrumb'} separator={'>'} className=\"bread-crumbs\">\r\n          {breadcrumbsList.map((item, index) =>\r\n            breadcrumbsList.length - 1 === index ? (\r\n              <Typography underline=\"hover\" variant={'h6'} key={index}>\r\n                {item.name}\r\n              </Typography>\r\n            ) : (\r\n              <Link\r\n                underline=\"hover\"\r\n                color=\"primary\"\r\n                variant={'h6'}\r\n                href=\"\"\r\n                onClick={e => {\r\n                  e.preventDefault();\r\n                  onClickBreadcrumbs(index, currentFilter);\r\n                }}\r\n                key={index}>\r\n                {item.name}\r\n              </Link>\r\n            ),\r\n          )}\r\n        </Breadcrumbs>\r\n      </>\r\n    );\r\n  };\r\n  const getFilters = () => {\r\n    return (\r\n      <>\r\n        <Box component=\"span\" mr={3} height={10} width={10} bgcolor={COLORS[4]} borderRadius=\"50%\" />\r\n        <Select\r\n          className={classes.selectBoxRoot}\r\n          labelId=\"simple-select-label\"\r\n          id=\"simple\"\r\n          value={currentFilter}\r\n          onChange={handleFilterChange}>\r\n          {filters.map((item, index) => (\r\n            <MenuItem key={index} value={item.label}>\r\n              {item.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CmtAdvCard>\r\n      <CmtCardHeader title={`Number of Risks  by ${currentFilter}`} subTitle={``}>\r\n        {getFilters()}\r\n      </CmtCardHeader>\r\n      <CmtAdvCardContent className={classes.cardContentRoot}>\r\n        <Box mb={2}>{getBreadcrumbs()}</Box>\r\n        <GridContainer>\r\n          <Grid item xs={12} md={12}>\r\n            <RisksTreeMapChat {...{ data, handleOnMapClick }} />\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Typography gutterBottom variant={'h4'}>\r\n              KEY\r\n            </Typography>\r\n            <RisksTreeMapKey {...{ data, department }} />\r\n          </Grid>\r\n        </GridContainer>\r\n      </CmtAdvCardContent>\r\n    </CmtAdvCard>\r\n  );\r\n};\r\nconst RisksTreeMapKey = ({ data, department, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        {data.length !== 0 &&\r\n          data.map((item, index) => (\r\n            <Grid item xs={12} md={3} key={index}>\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={clsx(classes.countryCellItem, {\r\n                  active: department.name === item.name,\r\n                })}\r\n                {...rest}>\r\n                <Box component=\"span\" ml={3} height={10} width={10} bgcolor={COLORS[4]} borderRadius=\"50%\" />\r\n                <Box>\r\n                  <Box className=\"text-hover\" px={1}>\r\n                    <b>{item.slug}</b> - {item.name}\r\n                  </Box>\r\n                </Box>\r\n                <Box px={1} display=\"flex\" alignItems=\"center\">\r\n                  <Box mx={1}>{item.risks}</Box>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nconst RisksTreeMapChat = props => {\r\n  const theme = useTheme();\r\n  const { data, color = COLORS[4], handleOnMapClick } = props;\r\n  const onClickTreeMap = data => {\r\n    handleOnMapClick(data);\r\n  };\r\n\r\n  const CustomizedContent = props => {\r\n    const { root, depth, x, y, width, height, index, fill, colors, risks, name, slug } = props;\r\n    //console.log(props);\r\n    //colors[Math.floor((index / root.children.length) * 6)]\r\n    return (\r\n      <g>\r\n        <rect\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          style={{\r\n            fill: depth < 2 ? fill : 'none',\r\n            stroke: '#fff',\r\n            strokeWidth: 2 / (depth + 1e-10),\r\n            strokeOpacity: 1 / (depth + 1e-10),\r\n            cursor: 'pointer',\r\n          }}\r\n        />\r\n        {depth === 1 ? (\r\n          <text\r\n            x={x + width / 2}\r\n            y={y + height / 2 + 7}\r\n            textAnchor=\"middle\"\r\n            fontFamily={theme.typography.fontFamily}\r\n            letterSpacing={2}\r\n            fontWeight={theme.typography.fontWeightLight}\r\n            fill={alpha(theme.palette.common.white, 0.74)}\r\n            fontSize={14}>\r\n            {slug}\r\n          </text>\r\n        ) : null}\r\n        {depth === 1 ? (\r\n          <text\r\n            x={x + width / 2}\r\n            y={y + height / 2 + 27}\r\n            fontFamily={theme.typography.fontFamily}\r\n            letterSpacing={2}\r\n            fontWeight={theme.typography.fontWeightLight}\r\n            textAnchor=\"middle\"\r\n            fill={alpha(theme.palette.common.white, 0.74)}\r\n            fontSize={12}>\r\n            {risks}\r\n          </text>\r\n        ) : null}\r\n        {/*{depth === 1 ? (*/}\r\n        {/*  <text x={x + 4} y={y + 18} fill=\"#fff\" fontSize={14} fillOpacity={0.9}>*/}\r\n        {/*    {index + 1}*/}\r\n        {/*  </text>*/}\r\n        {/*) : null}*/}\r\n      </g>\r\n    );\r\n  };\r\n  const getGradientColor = color => {\r\n    const gradientColor = GRADIENT_COLORS.find(element => element[0] === color);\r\n    if (gradientColor !== undefined) {\r\n      return gradientColor[1];\r\n    }\r\n    return null;\r\n  };\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <Box component={Paper} boxShadow={2} padding={2}>\r\n          <Typography variant={'h5'} style={{ color: payload[0].payload.fill }}>\r\n            {payload[0].payload.name}\r\n          </Typography>\r\n          <Typography variant={'caption'}>{`Risks : ${payload[0].value}`}</Typography>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={300}>\r\n      <Treemap\r\n        margin={{ top: 0, right: 0, left: 0, bottom: 0 }}\r\n        data={data}\r\n        dataKey=\"risks\"\r\n        ratio={4 / 3}\r\n        stroke=\"#fff\"\r\n        onClick={data => onClickTreeMap(data)}\r\n        fill={`url(#color1)`}\r\n        content={<CustomizedContent colors={COLORS} />}\r\n        isAnimationActive={true}>\r\n        <Tooltip content={CustomTooltip} />\r\n        <defs>\r\n          <linearGradient id=\"color1\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\" gradientTransform=\"rotate(90)\">\r\n            <stop offset=\"20%\" stopColor={color} stopOpacity={1} />\r\n            <stop offset=\"100%\" stopColor={getGradientColor(color)} stopOpacity={1} />\r\n          </linearGradient>\r\n        </defs>\r\n      </Treemap>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default RisksTreeMap;\r\n","import React from 'react';\r\nimport {\r\n  Column,\r\n  ColumnChooser,\r\n  FilterPanel,\r\n  FilterRow,\r\n  HeaderFilter,\r\n  Pager,\r\n  Paging,\r\n  Scrolling,\r\n  SearchPanel,\r\n  StateStoring,\r\n} from 'devextreme-react/data-grid';\r\nimport { Chip } from '@material-ui/core';\r\nimport { DataGrid } from 'devextreme-react';\r\n\r\nconst RisksTableView = props => {\r\n  const { risks } = props;\r\n  const multipleValues = ({ displayValue }) => {\r\n    return displayValue.map((value, index) => <li key={index}>{value}</li>);\r\n  };\r\n  function actionStatus({ displayValue }) {\r\n    let color;\r\n    if (displayValue === 'Approved') {\r\n      color = 'green';\r\n    } else if (displayValue === 'Pending') {\r\n      color = 'orange';\r\n    } else if (displayValue === 'Rejected') {\r\n      color = 'red';\r\n    }\r\n\r\n    return <Chip style={{ color: color, borderColor: color }} size={'small'} variant={'outlined'} label={displayValue} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DataGrid\r\n        id=\"risksView\"\r\n        columnAutoWidth={true}\r\n        dataSource={risks}\r\n        showColumnLines={true}\r\n        showRowLines={true}\r\n        showBorders={true}\r\n        allowColumnResizing={true}\r\n        rowAlternationEnabled={true}>\r\n        <FilterRow visible={true} />\r\n        <StateStoring enabled={false} type=\"localStorage\" storageKey=\"risksView\" />\r\n        <FilterPanel visible={true} />\r\n        <SearchPanel visible={true} />\r\n        <ColumnChooser enabled={true} mode=\"select\" />\r\n        <HeaderFilter visible={true} allowSearch={true} />\r\n        <Column dataField=\"id\" caption=\"Risk ID\" key=\"id\" visible={true} />\r\n        <Column\r\n          dataField=\"riskTitle\"\r\n          width={150}\r\n          caption=\"Risk Title\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"riskEvent\"\r\n          width={200}\r\n          caption=\"Risk Event\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"status\"\r\n          minWidth={100}\r\n          caption=\"Status\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n          allowHiding={true}\r\n          cellRender={actionStatus}\r\n        />\r\n        <Column\r\n          dataField=\"riskCategory\"\r\n          minWidth={100}\r\n          caption=\"Risk Category\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"department\"\r\n          minWidth={100}\r\n          caption=\"Department\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"section\"\r\n          minWidth={100}\r\n          caption=\"Section\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"subSection\"\r\n          minWidth={100}\r\n          caption=\"Sub-Section\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"rootCauses\"\r\n          minWidth={100}\r\n          caption=\"Root Causes\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          cellRender={multipleValues}\r\n          allowFiltering={false}\r\n        />\r\n        <Column dataField=\"riskImpact\" minWidth={100} caption=\"Risk Impact\" cellRender={multipleValues} />\r\n        <Column\r\n          dataField=\"riskImpactAmount\"\r\n          minWidth={100}\r\n          caption=\"Risk Impact Amount\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"probability\"\r\n          minWidth={100}\r\n          caption=\"Probability\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"severity\"\r\n          minWidth={100}\r\n          caption=\"Severity\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"residualRisk\"\r\n          minWidth={100}\r\n          caption=\"Residual Risk\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"riskControlCat\"\r\n          minWidth={100}\r\n          caption=\"Risk Control Category\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"controlActions\"\r\n          minWidth={100}\r\n          caption=\"Mitigations/Control\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n          cellRender={multipleValues}\r\n        />\r\n        <Column\r\n          dataField=\"lossType\"\r\n          minWidth={100}\r\n          caption=\"Loss Type\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"riskOwner\"\r\n          minWidth={100}\r\n          caption=\"Risk Owner\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"keyIndicator\"\r\n          minWidth={100}\r\n          caption=\"Risk Indicator\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Column\r\n          dataField=\"riskAppetite\"\r\n          minWidth={100}\r\n          caption=\"Risk Appetite\"\r\n          allowHeaderFiltering={true}\r\n          allowSearch={true}\r\n          allowFiltering={false}\r\n        />\r\n        <Scrolling rowRenderingMode=\"virtual\" />\r\n        <Paging defaultPageSize={20} />\r\n        <Pager\r\n          visible={true}\r\n          // allowedPageSizes={allowedPageSizes}\r\n          displayMode={true}\r\n          showPageSizeSelector={false}\r\n          showInfo={true}\r\n          showNavigationButtons={true}\r\n        />\r\n      </DataGrid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RisksTableView;\r\n","import React, { useState } from 'react';\r\nimport CmtBackDrop from '../../../../../@coremat/CmtBackDrop';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { Box, MenuItem, Select, Typography } from '@material-ui/core';\r\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport Highcharts from 'highcharts';\r\nimport CmtCardHeader from '../../../../../@coremat/CmtCard/CmtCardHeader';\r\nimport CmtAdvCardContent from '../../../../../@coremat/CmtAdvCard/CmtAdvCardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CmtAdvCard from '../../../../../@coremat/CmtAdvCard';\r\nimport { COLORS } from '../../dummyData';\r\nimport clsx from 'clsx';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { alpha } from '@material-ui/core/styles';\r\n\r\nrequire('highcharts/modules/exporting')(Highcharts);\r\nrequire('highcharts/highcharts-more')(Highcharts);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  cardContentRoot: {\r\n    position: 'relative',\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.5,\r\n    marginBottom: 20,\r\n  },\r\n  listItemRoot: {\r\n    padding: 0,\r\n    '& .root': {\r\n      marginBottom: 1,\r\n    },\r\n    '& .Cmt-label-container': {\r\n      fontSize: 12,\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  lossCategoryRoot: {\r\n    color: theme.palette.text.primary,\r\n    '& text': {\r\n      fill: theme.palette.text.primary,\r\n    },\r\n  },\r\n  countryCellItem: {\r\n    cursor: 'pointer',\r\n    padding: 10,\r\n    fontSize: 12,\r\n    transition: 'all .2s',\r\n    borderRadius: 4,\r\n    '&:hover, &.active': {\r\n      backgroundColor: alpha(theme.palette.common.dark, 0.04),\r\n      '& .text-hover': {\r\n        color: theme.palette.text.primary,\r\n      },\r\n    },\r\n    '&:hover': {\r\n      transform: 'translateY(-4px)',\r\n      boxShadow: `0 3px 10px 0 ${alpha(theme.palette.common.dark, 0.2)}`,\r\n    },\r\n  },\r\n}));\r\nconst Filter = props => {\r\n  const { currentFilter, setCurrentFilter, classes, filters = [] } = props;\r\n  const handleChange = event => {\r\n    setCurrentFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <CmtCardContent>\r\n      <Box className={classes.backdropContent}>\r\n        <AppSelectBox\r\n          label=\"Filter with\"\r\n          data={filters}\r\n          valueKey=\"label\"\r\n          labelKey=\"label\"\r\n          value={currentFilter}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n    </CmtCardContent>\r\n  );\r\n};\r\nconst FilterHeader = ({ currentFilter, classes }) => {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" mx={{ xs: -2, sm: -4 }}>\r\n      <Box className={classes.headerItem}>\r\n        {/*<DashboardIcon />*/}\r\n        {currentFilter}\r\n      </Box>\r\n      {/*<Box className={classes.headerItem}>*/}\r\n      {/*  <CalendarTodayIcon />*/}\r\n      {/*  {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}*/}\r\n      {/*</Box>*/}\r\n    </Box>\r\n  );\r\n};\r\nconst OldControlsChart = props => {\r\n  const { classes, currentFilter = 'Control Categories', data, setCurrentFilter, filters } = props;\r\n  const [revealed, setRevealed] = useState(false);\r\n  const handleOnRevealed = () => {\r\n    setRevealed(!revealed);\r\n  };\r\n  return (\r\n    <CmtBackDrop\r\n      concealedIcon={<CmtImage src={'/images/icons/filter_icon.png'} alt=\"filter\" />}\r\n      backLayerConcealed={revealed ? '' : <FilterHeader {...{ currentFilter, classes }} />}\r\n      backLayerRevealed={<Filter {...{ currentFilter, classes, setCurrentFilter, filters }} />}\r\n      onRevealed={handleOnRevealed}>\r\n      {/*<Box display=\"flex\" alignItems=\"center\" p={{ xs: 4, lg: 6, xl: 8 }}>*/}\r\n      {/*  <Box>*/}\r\n      {/*    <Box pl={{ xs: 4, lg: 6, xl: 8 }}>*/}\r\n      {/*      <Box display=\"flex\" alignItems=\"baseline\">*/}\r\n      {/*        /!*<Typography component=\"div\" variant=\"h4\">*!/*/}\r\n      {/*        /!*  Number of Risks per Loss Type*!/*/}\r\n      {/*        /!*</Typography>*!/*/}\r\n      {/*      </Box>*/}\r\n      {/*    </Box>*/}\r\n      {/*  </Box>*/}\r\n      {/*</Box>*/}\r\n      <Box padding={2}>\r\n        <ControlBubbleChart {...{ data }} />\r\n      </Box>\r\n    </CmtBackDrop>\r\n  );\r\n};\r\nconst ControlsChart = props => {\r\n  const { classes, currentFilter = 'Control Categories', data, setCurrentFilter, filters } = props;\r\n  const handleFilterChange = e => {\r\n    setCurrentFilter(e.target.value);\r\n  };\r\n  const getFilters = () => {\r\n    return (\r\n      <>\r\n        <Box component=\"span\" mr={3} height={10} width={10} bgcolor={COLORS[4]} borderRadius=\"50%\" />\r\n        <Select\r\n          className={classes.selectBoxRoot}\r\n          labelId=\"simple-select-label\"\r\n          id=\"simple\"\r\n          value={currentFilter}\r\n          onChange={handleFilterChange}>\r\n          {filters.map((item, index) => (\r\n            <MenuItem key={index} value={item.label}>\r\n              {item.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <CmtAdvCard>\r\n      <CmtCardHeader title={'Risk Category Report'} subTitle={`Number of Risks based on ${currentFilter}`}>\r\n        {getFilters()}\r\n      </CmtCardHeader>\r\n      <CmtAdvCardContent className={classes.cardContentRoot}>\r\n        <Box padding={2}>\r\n          <ControlBubbleChart {...{ data }} />\r\n        </Box>\r\n        <Box padding={2}>\r\n          <Typography gutterBottom variant={'h4'}>\r\n            KEY\r\n          </Typography>\r\n          <ControlMapKey {...{ data }} />\r\n        </Box>\r\n      </CmtAdvCardContent>\r\n    </CmtAdvCard>\r\n  );\r\n};\r\nconst ControlMapKey = ({ data, ...rest }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Grid container spacing={1}>\r\n        {data !== undefined &&\r\n          data.length !== 0 &&\r\n          data[0].data.map((item, index) => (\r\n            <Grid item xs={12} md={3} key={index}>\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n                className={clsx(classes.countryCellItem, {\r\n                  // active: department.name === item.name,\r\n                })}\r\n                {...rest}>\r\n                <Box component=\"span\" ml={3} height={10} width={10} bgcolor={item.color} borderRadius=\"50%\" />\r\n                <Box>\r\n                  <Box className=\"text-hover\" px={1}>\r\n                    <b>{item.slug}</b> - {item.name}\r\n                  </Box>\r\n                </Box>\r\n                <Box px={1} display=\"flex\" alignItems=\"center\">\r\n                  <Box mx={1}>{item.risks}</Box>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nconst ControlBubbleChart = props => {\r\n  const { data } = props;\r\n  const chartOptions = {\r\n    chart: {\r\n      type: 'packedbubble',\r\n      height: 400,\r\n      styleMode: false,\r\n    },\r\n    exporting: { enabled: false },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    title: {\r\n      text: '',\r\n    },\r\n    tooltip: {\r\n      useHTML: true,\r\n      pointFormat: '<b>{point.name}:</b> {point.value}',\r\n    },\r\n    plotOptions: {\r\n      packedbubble: {\r\n        minSize: '50%',\r\n        maxSize: '120%',\r\n        // zMin: 0,\r\n        // zMax: 1000,\r\n        layoutAlgorithm: {\r\n          gravitationalConstant: 0.05,\r\n          splitSeries: true,\r\n          seriesInteraction: false,\r\n          dragBetweenSeries: false,\r\n          parentNodeLimit: true,\r\n        },\r\n        dataLabels: {\r\n          enabled: true,\r\n          format: '{point.slug}',\r\n          filter: {\r\n            property: 'y',\r\n            operator: '>',\r\n            value: 0,\r\n          },\r\n          style: {\r\n            color: 'black',\r\n            textOutline: 'none',\r\n            fontWeight: 'normal',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    series: data,\r\n  };\r\n  return (\r\n    <>\r\n      <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n    </>\r\n  );\r\n};\r\nexport default ControlsChart;\r\n","import React, { useState } from 'react';\r\nimport CmtBackDrop from '../../../../../@coremat/CmtBackDrop';\r\nimport CmtImage from '../../../../../@coremat/CmtImage';\r\nimport { Box, Paper, Typography } from '@material-ui/core';\r\nimport CmtCardContent from '../../../../../@coremat/CmtCard/CmtCardContent';\r\nimport AppSelectBox from '../../../../../@jumbo/components/Common/formElements/AppSelectBox';\r\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { COLORS } from '../../dummyData';\r\n\r\nconst Filter = props => {\r\n  const { currentFilter, setCurrentFilter, classes, filters = [] } = props;\r\n  const handleChange = event => {\r\n    setCurrentFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <CmtCardContent>\r\n      <Box className={classes.backdropContent}>\r\n        <AppSelectBox\r\n          label=\"Filter with\"\r\n          data={filters}\r\n          valueKey=\"label\"\r\n          labelKey=\"label\"\r\n          value={currentFilter}\r\n          onChange={handleChange}\r\n        />\r\n      </Box>\r\n    </CmtCardContent>\r\n  );\r\n};\r\nconst FilterHeader = ({ currentFilter, classes }) => {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" mx={{ xs: -2, sm: -4 }}>\r\n      <Box className={classes.headerItem}>\r\n        {/*<DashboardIcon />*/}\r\n        {currentFilter}\r\n      </Box>\r\n      {/*<Box className={classes.headerItem}>*/}\r\n      {/*  <CalendarTodayIcon />*/}\r\n      {/*  {getFormattedDate(startDate, ' DD MMM')} - {getFormattedDate(endDate, ' DD MMM')}*/}\r\n      {/*</Box>*/}\r\n    </Box>\r\n  );\r\n};\r\nconst LossTypeChat = props => {\r\n  const { classes, currentFilter = 'Loss Type', data, setCurrentFilter, filters } = props;\r\n  const [revealed, setRevealed] = useState(false);\r\n  const handleOnRevealed = () => {\r\n    setRevealed(!revealed);\r\n  };\r\n  return (\r\n    <CmtBackDrop\r\n      concealedIcon={<CmtImage src={'/images/icons/filter_icon.png'} alt=\"filter\" />}\r\n      backLayerConcealed={revealed ? '' : <FilterHeader {...{ currentFilter, classes }} />}\r\n      backLayerRevealed={<Filter {...{ currentFilter, classes, setCurrentFilter, filters }} />}\r\n      onRevealed={handleOnRevealed}>\r\n      <Box display=\"flex\" alignItems=\"center\" p={{ xs: 4, lg: 6, xl: 8 }}>\r\n        <Box>\r\n          <Box pl={{ xs: 4, lg: 6, xl: 8 }}>\r\n            <Box display=\"flex\" alignItems=\"baseline\">\r\n              <Typography component=\"div\" variant=\"h4\">\r\n                Number of Risks per Loss Type\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box padding={2}>\r\n        <LossTypeStackChart {...{ data }} />\r\n      </Box>\r\n    </CmtBackDrop>\r\n  );\r\n};\r\nconst LossTypeStackChart = props => {\r\n  const { data } = props;\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    console.log(payload);\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <Box component={Paper} boxShadow={2} padding={2}>\r\n          <Typography variant={'h5'} style={{ color: payload[0].payload.fill }}>\r\n            {payload[0].payload.name}\r\n          </Typography>\r\n          <Typography variant={'caption'}>{`Risks : ${payload[0].value}`}</Typography>\r\n        </Box>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContainer width={'100%'} height={300}>\r\n      <BarChart data={data}>\r\n        {/*<CartesianGrid />*/}\r\n        <XAxis dataKey=\"name\" />\r\n        <YAxis />\r\n        <Bar dataKey=\"a\" stackId=\"a\" name={'Near Miss'} fill={COLORS[3]} />\r\n        <Bar dataKey=\"b\" stackId=\"a\" name={'Opportunity Cost'} fill={COLORS[2]} />\r\n        <Bar dataKey=\"c\" stackId=\"a\" name={'Indirect Financial Cost'} fill={COLORS[1]} />\r\n        <Bar dataKey=\"d\" stackId=\"a\" name={'Direct Financial Cost'} fill={COLORS[0]} />\r\n        <Legend verticalAlign=\"bottom\" />\r\n        <Tooltip />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\nexport default LossTypeChat;\r\n","import React, { useEffect, useState } from 'react';\r\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\r\nimport { Box, Button, Dialog, DialogContent, DialogTitle, Grid, makeStyles, Slide, Zoom } from '@material-ui/core';\r\n\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport RisksTreeMap from './RisksTreeMap';\r\nimport {\r\n  lossTypeRisksCatProgress,\r\n  lossTypeRisksDeptProgress,\r\n  riskControlTypeData,\r\n  riskControlTypeDataCat,\r\n  riskProbabilityData,\r\n  riskProbabilityDataCat,\r\n  riskTreeDataControlCat,\r\n  riskTreeDataDepartments,\r\n  riskTreeDataSections,\r\n} from '../../dummyData';\r\nimport RisksTableView from '../RisksTables';\r\nimport { risksList } from '../../../RiskManagement/dummyData';\r\nimport ControlsChart from './ControlsChart';\r\nimport LossTypeProbabilityChart from './LossTypeProbabilityChart';\r\nimport { getUniverseDashboardData } from '../../../../../redux/actions/Dashboard';\r\nimport ProbabilityChat from \"./ProbabilityBubbleChat\";\r\nimport LossTypeChat from \"./LossTypeChat\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  headerItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: 13,\r\n      paddingLeft: 8,\r\n      paddingRight: 8,\r\n    },\r\n    color: alpha(theme.palette.common.white, 0.74),\r\n    '&:not(:first-child)': {\r\n      borderLeft: `1px solid ${alpha(theme.palette.common.white, 0.8)}`,\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      marginRight: 12,\r\n    },\r\n  },\r\n  backdropContent: {\r\n    color: alpha(theme.palette.common.white, 0.74),\r\n    '& .form-control': {\r\n      marginBottom: 20,\r\n      '& label, & .MuiInput-formControl, & .MuiSelect-icon, & .MuiIconButton-root': {\r\n        color: alpha(theme.palette.common.white, 0.74),\r\n      },\r\n      '& .MuiInput-underline:before, & .MuiInput-underline:after': {\r\n        borderBottomColor: alpha(theme.palette.common.white, 0.74),\r\n      },\r\n    },\r\n  },\r\n  dialogRoot: {\r\n    position: 'relative',\r\n  },\r\n  dialogHeader: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  dialogTitleRoot: {\r\n    '& .MuiTypography-h6': {\r\n      fontSize: 16,\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  cardContentRoot: {\r\n    position: 'relative',\r\n  },\r\n  titleRoot: {\r\n    letterSpacing: 0.5,\r\n    marginBottom: 20,\r\n  },\r\n  listItemRoot: {\r\n    padding: 0,\r\n    '& .root': {\r\n      marginBottom: 1,\r\n    },\r\n    '& .Cmt-label-container': {\r\n      fontSize: 12,\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  },\r\n  selectBoxRoot: {\r\n    '&:before, &:after': {\r\n      display: 'none',\r\n    },\r\n    '& .MuiSelect-select:focus': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  subTitleRoot: {\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  lossCategoryRoot: {\r\n    color: theme.palette.text.primary,\r\n    '& text': {\r\n      fill: theme.palette.text.primary,\r\n    },\r\n  },\r\n}));\r\nconst filterOptions = [\r\n  { id: 1, label: 'Departments' },\r\n  { id: 2, label: 'Risk Categories' },\r\n];\r\n\r\nconst RisksGraphs = () => {\r\n  const [data, setData] = useState([]);\r\n  const [probabilityData, setProbabiltyData] = useState([]);\r\n  const [lossTypeData, setLossTypeData] = useState([]);\r\n  const [controlTypeData, setControlTypeData] = useState([]);\r\n  const [filters, setFilters] = useState(filterOptions);\r\n  const [department, setDepartment] = useState({ id: '', name: '' });\r\n  const [risks, setRisks] = useState([]);\r\n  const [currentFilter, setCurrentFilter] = useState(filters[0].label);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const fetchData = () => {\r\n    if (currentFilter === filters[0].label) {\r\n      //Set data by departments\r\n      if (department.id !== '' && department.name !== '') {\r\n        setData(riskTreeDataSections);\r\n      } else {\r\n        setData(riskTreeDataDepartments);\r\n        //setLossTypeData(riskLossTypeData);\r\n        setLossTypeData(lossTypeRisksDeptProgress);\r\n        setProbabiltyData(riskProbabilityData);\r\n        setControlTypeData(riskControlTypeData);\r\n      }\r\n    } else if (currentFilter === filters[1].label) {\r\n      //Set data by control Categories\r\n      setData(riskTreeDataControlCat);\r\n      //setLossTypeData(riskLossTypeDataCat);\r\n      setLossTypeData(lossTypeRisksCatProgress);\r\n      setProbabiltyData(riskProbabilityDataCat);\r\n      setControlTypeData(riskControlTypeDataCat);\r\n    }\r\n  };\r\n  const fetchRisks = () => {\r\n    setRisks(risksList);\r\n  };\r\n  const onCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  useEffect(() => {\r\n    if (openDialog) {\r\n      fetchRisks();\r\n    } else {\r\n      setRisks([]);\r\n    }\r\n  }, [openDialog]);\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [currentFilter, department]);\r\n\r\n  // useEffect(() => {\r\n  //  // fetchProbabilityData();\r\n  //  // fetchLossTypeData();\r\n  // }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={12}>\r\n          <RisksTreeMap\r\n            {...{ data, classes, filters, currentFilter, setCurrentFilter, department, setDepartment, setOpenDialog }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={12}>\r\n          <LossTypeProbabilityChart\r\n            {...{ data: probabilityData, lossTypeData, classes, currentFilter, setCurrentFilter, filters }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={8}>\r\n          <ProbabilityChat {...{ data: probabilityData, classes, currentFilter, setCurrentFilter, filters }} />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <LossTypeChat {...{ data: lossTypeData, classes, currentFilter, setCurrentFilter, filters }} />\r\n        </Grid>\r\n        <Grid item xs={12} md={12}>\r\n          <ControlsChart {...{ data: controlTypeData, classes, currentFilter, setCurrentFilter, filters }} />\r\n        </Grid>\r\n      </GridContainer>\r\n      <ShowRisksTable {...{ currentFilter, openDialog, onCloseDialog, risks }} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Transition = React.forwardRef((props, ref) => {\r\n  return <Zoom ref={ref} {...props} unmountOnExit />;\r\n});\r\nconst ShowRisksTable = props => {\r\n  const { onCloseDialog, openDialog, currentFilter, risks } = props;\r\n  const classes = useStyles();\r\n  return (\r\n    <Dialog\r\n      open={openDialog}\r\n      fullWidth={true}\r\n      maxWidth={'lg'}\r\n      onClose={onCloseDialog}\r\n      scroll={'paper'}\r\n      TransitionComponent={Transition}>\r\n      <div className={classes.dialogHeader}>\r\n        <DialogTitle className={classes.dialogTitleRoot}>Risks by {currentFilter}</DialogTitle>\r\n      </div>\r\n\r\n      <DialogContent style={{ marginTop: 10 }}>\r\n        <Box sx={{ width: '100%' }}>\r\n          <RisksTableView {...{ risks }} />\r\n        </Box>\r\n\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" mb={4}>\r\n          <Button onClick={onCloseDialog} size=\"small\">\r\n            Cancel\r\n          </Button>\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default RisksGraphs;\r\n","import React from 'react';\r\nimport PageContainer from '../../../../@jumbo/components/PageComponents/layouts/PageContainer';\r\nimport { HEADER } from '../../../../@jumbo/constants/HeaderMessages';\r\nimport { Box } from '@material-ui/core';\r\nimport RisksGraphs from './RisksGraphs';\r\nimport DashboardHeader from '../DashboardHeader';\r\n\r\nconst breadcrumbs = [\r\n  { label: HEADER.DASHBOARD, link: '/' },\r\n  { label: HEADER.GENERAL_DASHBOARD, isActive: true },\r\n];\r\n\r\nconst GeneralDashboard = () => {\r\n  return (\r\n    <PageContainer heading={HEADER.GENERAL_DASHBOARD} breadcrumbs={breadcrumbs}>\r\n      <Box width={'100%'}>\r\n        <DashboardHeader />\r\n        <Box mt={2}>\r\n          <RisksGraphs />\r\n        </Box>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default GeneralDashboard;\r\n"],"sourceRoot":""}